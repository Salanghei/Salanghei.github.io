{"meta":{"title":"ZHAOYANGのBlog","subtitle":"Notes and Experiences","description":"Notes and Experiences","author":"ZhaoYang","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2019-07-25T02:39:56.000Z","updated":"2019-07-26T02:44:38.423Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"emmmmmm暂时没想到什么想好了再来写吧……"},{"title":"categories","date":"2019-07-23T07:20:17.000Z","updated":"2019-07-23T07:45:29.217Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Tagcloud","date":"2019-07-23T07:20:06.000Z","updated":"2019-07-23T07:44:44.230Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"吴恩达机器学习课程笔记（四）-逻辑回归","slug":"吴恩达机器学习课程笔记（四）-逻辑回归","date":"2019-07-30T07:30:28.000Z","updated":"2019-07-30T07:59:32.010Z","comments":true,"path":"2019/07/30/吴恩达机器学习课程笔记（四）-逻辑回归/","link":"","permalink":"http://yoursite.com/2019/07/30/吴恩达机器学习课程笔记（四）-逻辑回归/","excerpt":"本节内容：1、介绍分类问题，并用逻辑回归解决分类问题2、介绍逻辑回归的决策边界，假设函数（hypothesis），代价函数，以及用梯度下降法求解最优θ值3、介绍高级优化方法，及其在octave中的实现4、介绍多分类问题（一对多，一对余），以及解决多分类问题的基本思想","text":"本节内容：1、介绍分类问题，并用逻辑回归解决分类问题2、介绍逻辑回归的决策边界，假设函数（hypothesis），代价函数，以及用梯度下降法求解最优θ值3、介绍高级优化方法，及其在octave中的实现4、介绍多分类问题（一对多，一对余），以及解决多分类问题的基本思想 分类y的取值是离散的二分类问题中，yϵ{0,1}，0表示“负类”，1表示“正类”，在两个类别中，哪个是正类哪个是负类并没有什么区别，但一般来说，负类表示没有某样东西 给定一个分类问题的训练集（如下图所示），如果用线性回归的方法对数据进行拟合，会得到一个分界点，其左侧预测为0，右侧预测为1，在这个数据集上，线性回归的结果似乎是可行的假设数据集改变，如下图所示，此时，如果再用线性回归来拟合数据，会得到一条新的直线，分界点也会随之改变，其左侧预测为0，与原数据不相符分类问题中（此节讨论二分类问题），y的取值为0和1，但线性回归的预测结果可能是远大于1，或远小于0因此，将线性回归用于分类问题中是不合理的 逻辑回归：预测值一直介于0,1之间分类算法 假设陈述解释：h(x)的输出是，对于一个输入x，y=1的概率估计 决策界限当θ^T x≥0时，预测y=1；当θ^T x&lt;0时，预测y=0e.g.假设给定一个数据集，得出一个拟合好的逻辑回归函数，如下图所示当-3+x1+x2≥0时，预测y=1；当-3+x1+x2&lt;0时，预测y=0-3+x1+x2=0这条直线叫做决策边界决策边界是假设函数（hypothesis）的属性，取决于其参数，不是数据集的属性 非线性决策边界e.g.假设给定一个数据集，得出一个拟合好的逻辑回归函数，如下图所示 代价函数如果使用线性回归中的平方函数定义代价函数，得到的代价函数是非凸的（non-convex），因为h(x)是非线性的，这样就会有多个局部最优解，使用梯度下降法，无法保证得到全局最优解因此需要另找一个不同的代价函数，它是凸函数，使我们可以使用很好的算法，如梯度下降，能保证找到全局最小值 逻辑回归的代价函数 简化代价函数与梯度下降逻辑回归的梯度下降规则，与线性回归的梯度下降规则，几乎一摸一样，但由于假设函数不同，其与线性回归的梯度下降是两个完全不同的东西 高级优化介绍一些高级优化算法和高级优化概念，这些方法与梯度下降相比，能大大提高逻辑回归运行的速度，使算法更加适合解决大型的机器学习问题其他优化算法：共轭梯度（Conjugate gradient），BFGS，L-BFGS优点：1、不需要手动选择α的值：这些算法给出计算导数项和代价函数的方法，可以理解为这些算法有一个智能内循环（clever inner-loop）， 称为线搜索算法，它可以自动尝试不同的学习率α并自动选择一个好的学习率α，甚至可以为每次迭代选择不同的学习率2、收敛得远远快于梯度下降：缺点：更复杂 多元分类：一对多一对多（一对余）的分类思想假设给定一个训练集（如下图所示），其中包含三个类别，我们要做的是将这个训练集转化为三个独立的二分类问题，得到三个假设函数（分类器），分别输出y=i时的概率估计最后为了做出预测，给出一个新的输入值x，在三个分类器上运行，然后选择h最大的类别也就是选择出三个中可信度最高、效果最好的分类器，无论i值是多少，都能得到一个最高的概率值，预测y就是那个i值 课程资料课程原版PPT-Logistic Regression","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://yoursite.com/categories/学习笔记/"}],"tags":[{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/机器学习/"},{"name":"吴恩达机器学习课程","slug":"吴恩达机器学习课程","permalink":"http://yoursite.com/tags/吴恩达机器学习课程/"}]},{"title":"A Probabilistic Model for Using Social Networks in Personalized Item Recommendation","slug":"A-Probabilistic-Model-for-Using-Social-Networks-in-Personalized-Item-Recommendation","date":"2019-07-29T07:31:41.000Z","updated":"2019-07-29T08:11:17.644Z","comments":true,"path":"2019/07/29/A-Probabilistic-Model-for-Using-Social-Networks-in-Personalized-Item-Recommendation/","link":"","permalink":"http://yoursite.com/2019/07/29/A-Probabilistic-Model-for-Using-Social-Networks-in-Personalized-Item-Recommendation/","excerpt":"ABSTRACT问题：传统的基于偏好的推荐没有考虑到用户的社交方面，一个值得信赖的朋友可能会指出我们一个与我们的典型偏好不符的有趣项目目的：缩小基于偏好的推荐和基于社会关系的推荐之间的差异方法：SPF（social Poisson factorization，社会关系矩阵泊松分解），一种将社交网络信息纳入传统分解方法的概率模型效果：在6个真实数据集上的性能优于其他推荐方法","text":"ABSTRACT问题：传统的基于偏好的推荐没有考虑到用户的社交方面，一个值得信赖的朋友可能会指出我们一个与我们的典型偏好不符的有趣项目目的：缩小基于偏好的推荐和基于社会关系的推荐之间的差异方法：SPF（social Poisson factorization，社会关系矩阵泊松分解），一种将社交网络信息纳入传统分解方法的概率模型效果：在6个真实数据集上的性能优于其他推荐方法 INTRODUCTION研究表明，用户看中朋友对内容的发现和讨论意见，在线访问社交网络可以强化这种现象矩阵分解方法不能利用这些信息，他能推断出你可能喜欢的物品是因为这个物品符合你的偏好，但是不能推断出你朋友喜欢且你也可能感兴趣的物品本文提出基于贝叶斯矩阵分解的SPF（social Poisson factorization）方法，可以在社交层面反映用户消费的商品SPF假设有两个信号驱动用户点击：对项目的潜在偏好和朋友的潜在影响SPF推测每个用户的偏好和影响，向用户推荐即符合用户偏好又被其朋友点击过的项目 Related Work：过去研究的一些缺陷： 1、假设用户影响（也称信任）是可以直接获取的，但除了是/否这样的二进制信任信息之外，其他的信任信息用户是很难输入的 2、假设信任是从网络结构中传播或计算得到的，忽略了用户活动，这可以反应用户对网络某些部分的信任 3、通过计算用户之间的相似程度来计算信任，会使一般意义上的偏好相似度和用户影响的概念混淆，比如：两个拥有相同兴趣偏好的用户可能各自阅读同一本书，但彼此之间没有交集 4、将社交信息纳入协同过滤方法中，与矩阵分解方法相比，缺乏可解释性 5、探索了传统的矩阵分解方法如何利用社交关系，例如许多模型分解了user-item数据和user-user网络，使相连用户的潜在偏好更接近彼此，反映出朋友有着相似的喜好 e.g. 如果用户喜欢某个项目只是因为他许多朋友也喜欢，这完全超出了他通常的喜好 本文思路：寻找不同偏好的朋友（均衡朋友的影响），辅助向用户推荐不符合他通常喜好的物品。根据社交网络调整朋友的总体喜好，不允许用户仍然享受这种异常项目（朋友喜欢导致超出用户的通常喜好）的可能性 *注1：用户影响，即信任，是当两个用户是朋友有互动的前提下的，而通过偏好相似度计算得出的信任，很可能使非朋友的两个用户之间存在信任关系*注2：假设用户可能喜欢某个项目，喜欢的程度是A；该用户的朋友也喜欢该项目，考虑到朋友的影响，再结合本身的喜好，导致得出该用户对该项目的喜欢程度是B；结果其实B是高于A的 SOCIAL POISSON FACTORIZATION1、利用潜在用户偏好和潜在项目属性，捕捉用户的活动模式2、估计用户受到朋友可见点击（朋友喜好）的影响有多大3、推荐有影响力的朋友点击的项目，即使他们不符合矩阵分解得出的用户偏好 Background: Poisson factorization泊松矩阵分解，即将通常的矩阵分解方法中的高斯分布换成泊松分布 Social Poisson factorizationSPF的思想：用户喜欢一个item有两个原因：用户的喜好和item的属性相符合（泊松矩阵分解/其他矩阵分解的思想）；用户有喜欢这个item的朋友，或者他的许多朋友都喜欢这个item在PF（泊松矩阵分解）中，每个用户有一个潜在喜好的向量。但每个用户又有一个对每个朋友影响力的向量。一个用户是否喜欢某个item取决于她潜在的喜好和item潜在的属性，也取决于对她有影响的朋友是否点击了它 Model specification（模型设定） 可用数据是用户行为和社交网络 行为数据是系数矩阵R，其中r_ui 是用户u点击项目i的次数 社交网络通过邻居集合表示：N(u)是连接到用户u的其他用户的索引集合 隐藏变量是每个用户的非负偏好k维向量θ_u，每个item的非负属性k维向量β_i，每个邻居的非负影响τ_uv τ_uv 表示用户u多大程度上受到用户v点击的影响 给定矩阵R的联合分布： Forming recommendations with SPF（通过SPF形成推荐） Learning the hidden variables with variational methods（用变分方法学习隐变量）在给定了点击数据和社交网络的条件下，我们的目的是计算用户偏好、项目属性和潜在影响的后验分布对于许多贝叶斯模型，SPF的精确后验分布是很难计算的变分方法被广泛用于统计机器学习来适应复杂的贝叶斯模型本文提出了基于变分方法的近似推理算法，通过这个算法，可以在非常大的数据集上计算近似后验期望 变分推理通过解决最优化问题逼近后验1、在隐变量上定义自由参数化分布，将其参数拟合为近似后验分布2、使用Kullback-Leibler散度来度量“近似度”，是一种对分部间距离的不对称度量3、用拟合的变分布替代后验分布 EMPIRICAL STUDY（实验研究） 将SPF与五种涉及推荐中的社交网络的方法，和两种传统的矩阵分解方法，进行了比较 在6个真实数据集上，我们的方法优于以上所有方法 展示了如何利用SPF对数据进行挖掘，并从潜在因素和社会影响两个方面对数据进行了表征 评估了对潜在因素数量的敏感性，并讨论了如何在先验分布上设置超参数 数据集、方法和度量6个数据集：1、Ciao (ciao.co.uk)：具有潜在社交网络的消费者评论网站，7K用户和98K项目的DVD评分和信任值2、Epinions (epinions.com) ：消费者评论网站，用户在网站上对商品进行评分，并将用户标记为可信赖的，包含39K用户和131K项目3、Flixster (flixster.com)：社交电影评论网站，我们将评分二值化，阈值设置在3或以上，从而得到132 K用户和42K项目4、Douban (douban.com)：一家中国社交网站，记录音乐、电影和书籍的评分，包含129K用户和57K项目5、Etsy (etsy.com)：一个手工制品和古董以及艺术品和工艺品的市场，用户可以互相关注，并将项目标记为收藏，这些数据由Etsy直接提供，筛选出了那些至少收藏了10项，并且至少有25%的项目与他们的朋友有共同之处的用户，我们省略了少于5个收藏的项目，包含40K用户和5.2M项目6、Social Reader：一家大型媒体公司的数据集，在流行的在线社交网络上部署了一个阅读应用，数据包含一个社交网络和一个文章点击表，我们分析了2012年4月2日-6日的数据，仅包括在此期间至少阅读了3篇文章的用户，包含122K用户和6K项目 下表概述了6个数据集的属性预处理：对于隐式数据，非泊松模型要求我们对0进行子采样，以便区分项目；在这些情况下，我们随机抽样负示例，使每个用户都具有相同的正面和负面评分。请注意，基于泊松的模型隐式地分析了整个矩阵，而不需要支付分析零的计算成本对于每个数据集，我们删除了用户没有共同项的网络连接。请注意，这对SPF和比较模型都有好处(虽然SPF可以了解邻居的相对影响)将数据分为三组：约10%的用户数据用于推理后测试中（approximately 10% of 1000 users’ data），1%的用户数据用来评估推理的收敛性，其余的用于训练。一个例外是Ciao，我们使用了10%的用户数据进行测试（10% of all users’ data） 比较方法：与以下几个模型进行比较：RSTE，TrustSVD，SocialMF，SoRec，TrustMF，以及概率高斯矩阵分解（PMF，广泛使用的推荐方法），对于每一个模型，采用最佳参数设置，与LibRec网站上发布的示例拟合SPF有两个部分：泊松分解分量和社会分量，因此将这两部分单独比较：泊松分解(PF)和社会因素分解(SF)比较两个标准，随机订购项目和根据普遍受欢迎程度订购项目 度量（NCRR）：对于每个用户，分别预测被搁置（held-out）项目的点击量，和真正未点击项目的点击量，并通过他们的期望值进行排名，好的模型应将搁置的项目排在前面 下图为实验结果 Performance and exploration（性能与探索）性能：各模型表现如图3所示，本文提出的SPF在所有6个数据集上的表现都优于其他模型，除了在Etsy上，纯社会因素分解(SF)表现最好。此外，基于流行度排序的表现良好，这突出了社会因素分解的重要性，只有SPF的表现一直优于它在Ciao数据集上测量运行时，以了解相关的计算成本。下图显示了所有方法在K的不同值下的运行时，泊松模型在运行时方面是平均的在Ciao和Epinionis数据集上，将SPF、SF和PF的性能看做每个用户的度的函数；结果如下图所示。所有的模型在高度的用户上都表现得更好，大概是因为他们的活动度更高。SPF的性能优于SF，因为它在大量的低度的用户上有优势 Interpretability（可解释性）：使用辅助变量将每个推荐归因于朋友或一般偏好，然后使用这些属性来探索数据下图显示了在Ciao和Epinions数据集上，社会归因（与一般偏好归因相对）的比例如何随着用户度的变化而变化，观察到，Epinions将更大部分的行为归因于社会影响，并受用户度的控制下图展示了社会影响与用户入度间的函数关系，在Epinions数据集上，高入度的用户比低入度的用户的社会影响更低 实验细节潜在因子k值的选择：所有的矩阵分解模型，包括SPF，都要求选择用于表示用户和项目的潜在因子K的值，我们评估了Ciao数据集对K的敏感性，下图展示了K从1到500的平均NCRR，SPF在K=40时表现最佳，但对K敏感性低于其他一些方法（如PF）超参数：必须将超参数设置为潜在变量的γ先验， γ通过形状和速率参数化，将其设置为0.3，用于潜在偏好和属性的先验。 将先前用户影响的超参数设置为（2,5），为了鼓励模型通过社会影响来探索解释。 在一项试点研究中，我们发现该模型对这些设置不敏感。 在冷启动的情况下，我们知道用户的社交网络，但不知道他的点击项目，执行SPF相当于执行SF，SPF在这种冷启动的场景下比其他模型（本文提到的几个模型）表现都好 DISCUSSION本文提出社会泊松分解（SPF），一种贝叶斯模型，结合了用户对其朋友潜在影响的项目的潜在偏好，我们证明，SPF即使在有噪声的社会网络上，也能改善推荐SPF有以下特性：1、它揭示了社交网络中用户之间存在的潜在影响，使我们能够分析社会动态。2、它提供了可解释的意外发现的来源（？？？）3、它具有可扩展的算法，适用于大数据集我们的模型没有考虑到时间（当两个相连的用户都享受一个项目时，其中一个可能首先使用它） 论文原文A Probabilistic Model for Using Social Networks in Personalized Item Recommendation","categories":[{"name":"论文笔记","slug":"论文笔记","permalink":"http://yoursite.com/categories/论文笔记/"}],"tags":[{"name":"推荐系统","slug":"推荐系统","permalink":"http://yoursite.com/tags/推荐系统/"},{"name":"RecSys2015","slug":"RecSys2015","permalink":"http://yoursite.com/tags/RecSys2015/"}]},{"title":"吴恩达机器学习课程笔记（三）-多变量线性回归","slug":"吴恩达机器学习课程笔记（三）-多变量线性回归","date":"2019-07-26T07:25:42.000Z","updated":"2019-07-30T07:59:14.817Z","comments":true,"path":"2019/07/26/吴恩达机器学习课程笔记（三）-多变量线性回归/","link":"","permalink":"http://yoursite.com/2019/07/26/吴恩达机器学习课程笔记（三）-多变量线性回归/","excerpt":"本节课内容：1、多变量线性回归的Hypothesis公式、参数、代价函数。2、特征缩放、归一化处理、以及学习率α值的选取。3、特征的选取和多项式回归。4、另外一种得到θ最优解的方法-正规方程，以及正规方程中X’X不可逆的情况和解决方法。 多变量线性回归","text":"本节课内容：1、多变量线性回归的Hypothesis公式、参数、代价函数。2、特征缩放、归一化处理、以及学习率α值的选取。3、特征的选取和多项式回归。4、另外一种得到θ最优解的方法-正规方程，以及正规方程中X’X不可逆的情况和解决方法。 多变量线性回归 特征缩放（Feature Scaling）不同特征的取值在相近的范围内，梯度下降法就能更快的收敛 e.g. 假设要根据房屋的面积和卧室的数量预测房屋的售价，房屋的面积取值范围是0-2000，卧室的数量的取值范围是1-5，画出代价函数的等值线（忽略θ_0），图形是很狭长的，这样在梯度下降找到全局最小时，需要很长的时间，且来回波动。如果将特征进行缩放，把x_1 定义为房屋面积除以2000，把x_2 定义为卧室数量除以5，那么代价函数的等值线就不会很狭长，会更圆一点，在这样的代价函数上进行梯度下降，会找到一条更直接的路径通向全局最小 特征缩放是将特征的取值通过乘除限制在某个合适的范围内（不一定必须是-1~1之间），以使梯度下降更快的收敛，使迭代次数更少 归一化处理使用x_i−μ_i 代替x_i，使特征值取值的平均值为0不用将归一化应用于特征x_0，因为x_0 的取值始终为1 将归一化和特征放缩相结合图中μ_i 的取值为特征值的平均值，s_i 的取值为特征值的范围（max-min）或者标准差 代价函数曲线如果梯度下降算法正常工作，每一步迭代后的代价函数都应该下降代价函数曲线可以判断是否收敛，以及梯度下降在迭代多少次后收敛 自动收敛测试：如果代价函数在一步迭代后的下降小于一个很小的值ϵ，即判断函数已经收敛实际上，选择一个合适的阈值ϵ还是很困难的，所以（老师）更倾向于看代价函数曲线来判断收敛，而不是用自动收敛测试 代价函数也可以提前警告算法没有正常工作：1、如果代价函数的值在不断上升，通常意味着应该使用较小的学习率α最常见的原因是（代码中无错误的情况下），在尝试最小化一个碗型函数（图中粉色函数）时，学习率太大，梯度下降算法可能会不断冲过最小值2、代价函数值不断的下降再升高，也是学习率α过大 数学家已经证明，只要学习率α足够小，每次迭代后的代价函数都会下降但如果学习率α取值非常小的话，梯度下降算法可能收敛的很慢 综上所述：-如果学习率α取值非常小，梯度下降算法可能收敛的很慢-如果学习率α取值非常大，代价函数可能在迭代后不下降；最后可能不收敛；也可能收敛很慢通常选择α取值时，尝试一系列α值，直到找到一个使算法正常工作的最小的α值，和一个最大的α值，然后取最大的α值，或者比最大α值略小一点的比较合理的值 特征和多项式回归1、特征：当使用线性回归时，不一定直接使用给出的特征，可以自己创造新的特征e.g.给定的特征是房屋的宽度和深度，但我们可以选择将宽度和深度的乘积，即面积，作为特征2、多项式回归：对于一个数据集，可能会有多个不同的模型进行拟合，当直线不能很好的拟合数据时，可以使用二次模型、三次模型等。可以使用多元线性回归的方法，对多元线性回归算法稍作修改，来实现二次模型、三次模型等。3、当使用多项式回归时，特征放缩就变得更重要4、凭着对各种函数图形到的了解，以及对数据形状的了解，通过选择不同的特征，可以得到更好的模型 正规方程一种求θ的解析解法，一次性求解θ的最优值，无需迭代使用正规方程，不需要进行特征放缩 正规方程与梯度下降的优缺点：当n较小时，选择正规方程；当n较大时，选择梯度下降，因为正规方程中求取逆矩阵的时间复杂度太高正规方程不适合用于更复杂的学习算法中 正规方程中X’X不可逆的情况（X’为X的转置矩阵）1、多余的特征（线性相关）e.g.在预测房屋价格时，x1为房屋的面积（平方米），x2为房屋的面积（平方英尺），那么x1和x2之间存在一个线性关系，这时的特征矩阵X’X不可逆2、特征太多（e.g.m≤n）可以删除某些特征，或正则化 课程资料课程原版PPT-Linear Algebra review (optional)课程原版PPT-Linear Regression with multiple variables","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://yoursite.com/categories/学习笔记/"}],"tags":[{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/机器学习/"},{"name":"吴恩达机器学习课程","slug":"吴恩达机器学习课程","permalink":"http://yoursite.com/tags/吴恩达机器学习课程/"}]},{"title":"吴恩达机器学习课程笔记（二）-单变量线性回归","slug":"吴恩达机器学习课程笔记（二）-单变量线性回归","date":"2019-07-25T02:15:52.000Z","updated":"2019-07-30T07:58:26.245Z","comments":true,"path":"2019/07/25/吴恩达机器学习课程笔记（二）-单变量线性回归/","link":"","permalink":"http://yoursite.com/2019/07/25/吴恩达机器学习课程笔记（二）-单变量线性回归/","excerpt":"本节课内容：介绍单变量线性回归的Hypothesis公式、参数、代价函数，通过梯度下降法计算最优参数值，得到最终的Hypothesis公式，进行预测 单变量线性回归代价函数（Cost Function）：平方误差函数（最常用）","text":"本节课内容：介绍单变量线性回归的Hypothesis公式、参数、代价函数，通过梯度下降法计算最优参数值，得到最终的Hypothesis公式，进行预测 单变量线性回归代价函数（Cost Function）：平方误差函数（最常用） 梯度下降广泛用于机器学习的众多领域α称为学习速率，控制以多大的幅度更新参数：当α很小时，梯度下降很慢当α很大时，梯度下降可能越过最低点，可能无法收敛，甚至会发散 注意：θ_0 和θ_1 必须同步更新 在梯度下降法中，当我们接近局部最低点时，梯度下降会自动采取更小的幅度，因为局部最低点的导数为0，当接近局部最低点时，导数值会自动变得越来越小 线性回归的梯度下降“Batch” Gradient Descent：每一步的梯度下降的计算中都涉及到训练样本中的全部数据 课程资料课程原版PPT-Linear regression with one variable练习内容和相关说明相关数据1，相关数据2 python代码实现1.linear_regreesion_v1.ipynbML-Exercise1.ipynb","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://yoursite.com/categories/学习笔记/"}],"tags":[{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/机器学习/"},{"name":"吴恩达机器学习课程","slug":"吴恩达机器学习课程","permalink":"http://yoursite.com/tags/吴恩达机器学习课程/"}]},{"title":"吴恩达机器学习课程笔记（一）-初识机器学习","slug":"吴恩达机器学习课程-初识机器学习","date":"2019-07-25T02:08:35.000Z","updated":"2019-07-30T07:57:22.186Z","comments":true,"path":"2019/07/25/吴恩达机器学习课程-初识机器学习/","link":"","permalink":"http://yoursite.com/2019/07/25/吴恩达机器学习课程-初识机器学习/","excerpt":"机器学习定义：1、在没有明确设置的情况下，使计算机具有学习能力的研究领域（Arthur Samuel 1959, 跳棋游戏）2、一个适当的学习问题定义如下，计算机程序从经验E中学习，解决某一任务T，进行某一性能度量P，通过 P测定在T上的表现因经验E而提高（Tom Mitchell 1998）","text":"机器学习定义：1、在没有明确设置的情况下，使计算机具有学习能力的研究领域（Arthur Samuel 1959, 跳棋游戏）2、一个适当的学习问题定义如下，计算机程序从经验E中学习，解决某一任务T，进行某一性能度量P，通过 P测定在T上的表现因经验E而提高（Tom Mitchell 1998） 机器学习算法:监督学习、无监督学习（最常用的两种）强化学习、推荐系统 监督学习：给算法一个数据集，其中包含了正确答案，算法的目的是给出更多正确答案连续值：回归问题，即选择合适的函数拟合数据离散值：分类问题，可能输出多个结果 无监督学习给算法一个数据集，其中不包含标签信息或者标签相同，算法的目的是找到其中的某种结构 聚类算法：根据数据的分布特征，将数据分成不同的簇应用：google新闻、基因组学、组织大型计算机集群、社交网络、市场划分、天文数据分析等 鸡尾酒会算法：从混合音频源中分离音频 课程资料课程原版PPT-Introduction","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://yoursite.com/categories/学习笔记/"}],"tags":[{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/机器学习/"},{"name":"吴恩达机器学习课程","slug":"吴恩达机器学习课程","permalink":"http://yoursite.com/tags/吴恩达机器学习课程/"}]},{"title":"Calibrated Recommendations","slug":"Calibrated-Recommendations","date":"2019-07-23T09:08:28.000Z","updated":"2019-07-29T07:58:06.071Z","comments":true,"path":"2019/07/23/Calibrated-Recommendations/","link":"","permalink":"http://yoursite.com/2019/07/23/Calibrated-Recommendations/","excerpt":"Abstract校准（calibration），在机器学习公平性的背景下被重新重视保证准确率的推荐，很容易导致： 1. 用户的次要兴趣被主要兴趣挤出，使得推荐结果的领域逐渐趋向狭窄 2. 当多个用户使用同一账号时，不活跃的用户的兴趣会被排挤校准推荐（calibrated recommendations）可以避免这个问题贡献：概述量化标准度的度量指标，后处理推荐系统输出的重新排序算法","text":"Abstract校准（calibration），在机器学习公平性的背景下被重新重视保证准确率的推荐，很容易导致： 1. 用户的次要兴趣被主要兴趣挤出，使得推荐结果的领域逐渐趋向狭窄 2. 当多个用户使用同一账号时，不活跃的用户的兴趣会被排挤校准推荐（calibrated recommendations）可以避免这个问题贡献：概述量化标准度的度量指标，后处理推荐系统输出的重新排序算法 INTRODUCTION校准（calibrated）：各个类别的预测比例与数据中的实际比例一致校准推荐（calibrated recommendations）：推荐列表能够反应用户的各种兴趣比例校准的多样性：不同于项目之间最小相似性意义上的多样性，和推荐项的冗余 MOTIVATING EXAMPLE离线数据集：由用户-项-交互历史数据组成，将其分为训练集和测试集目的：保证最高准确度的情况下，在测试集中预测用户的交互项 假设：一个用户播放了70部“浪漫类”电影，和30部“动作类”电影 电影类别互斥目的：生成一个包含10部电影的推荐列表 类别不均衡：最极端情况：只知道用户对电影类别的喜好，没有任何其他电影的信息为达到最高准确度，会100%为用户推荐“浪漫类”的电影，此时准确率为70%如果随机为用户推荐电影，70%的概率推荐“浪漫类”，30%的概率推荐“动作类”，准确率只有0.7 · 70% + 0.3 · 30% = 58%因此，在保证准确性的前提下： 1. 在推荐结果中，用户的主要兴趣领域会被放大，而有轻微兴趣的领域会被排挤出去 2. 推荐结果是存在偏向的，偏向于用户的主要兴趣领域反过来说，为提高平衡性，或者校准推荐，会降低推荐的准确性 考虑电影概率： Latent Dirichlet Allocation（LDA）：受LDA的启发，用户选择电影的两步过程：选择类型，选择电影提到LDA的原因： 1. 假设在现实世界中，用户确实按照以上两个步骤选择电影。LDA模型在训练时，能够以正确的比例捕获用户的兴趣平衡。推荐列表是迭代生成的，每次迭代增加一个推荐项，推荐项的得出遵循它的生成过程，即上述两个步骤：首先，类型g会根据p(g|u)被抽取出来；然后，电影i根据p(i|g)从类型g的所有电影中抽出。因此，即使电影i被选中的概率很小，也可以排进推荐列表的前方，但准确率比评分推荐低 2. 不平衡推荐的问题不仅限于显式类别，也适用于潜在主题或嵌入情况，LDA就是这样的模型 3. 不管电影是否属于一个类别，或属于几个类别，不平衡推荐的问题都会出现 CALIBRATION METRICS（校准度量） CALIBRATION APPROACHES（校准方法） RELATED CONCEPTS多样性（Diversity）：多样性（Diversity）和校准（Calibration）的区别： 1. 多样性不能直接反应用户的兴趣比例：多样性即推荐项间的最小冗余或最小相似性，使推荐结果不是100%的“浪漫类”电影（在前面的例子中）。如果只有两种类型的电影，最多样性的推荐是50%“浪漫类”，50%“动作类”；如果还有其他类型的电影，多样性的推荐会把用户没有播放过的电影类型也推荐给用户，但如果把“动作类”电影在推荐中的比例由0%提升到30%以反映用户的兴趣比例，就不能保证多样性。只有把多样性和准确性平衡好，才能达到良好校准推荐。对于每个用户，这种折中的程度都是不同的。 2. 多样性可以推荐用户兴趣之外的电影，避免了推荐范围的减小（马太效应），而校准推荐没有这样的特性。这激发了对校准推荐的简单扩展，即用户兴趣之外的类别也会加入到推荐列表中：p_0 (g)表示每种类型的先验分布，取正数，为促进多样性DP：本质上是p(g│u)和q(g│u)之间的修正平方差，符合仅我们提到的特性1BinomDiv：符合特性2,3，劣势：无法给出推荐列表的校验程度（与目标比例的偏差），只能对不同推荐列表做相对比较；由于每个用户的兴趣比例不同，该方法不能简单的在用户之间进行平均，获得聚合度量 公平性（Fairness）：本篇文章中不考虑人之间的公平性，而是用户兴趣之间的公平性，也就是用正确的比例关系反应出来为什么本篇文章认为校准标准（calibration criteria）在公平性中尤其重要： 校准、等可能性、等机会不能同时满足，除非两种情况：机器学习做出完美预测（在现实世界中不可能）；不同组有相同的基本比率，即分类标签比例相同，通常在真实世界中也不可能出现。假设用户播放电影中70%是“浪漫类”，30%是“动作类”，那么这两种类型的基础比率很明显不同，两种类型电影的预测分数也会不同，因此，等可能性、等机会这样的公平性标准不能立即起适用 EXPERIMENTS上述图标也反映了，经过校准后的推荐列表中的推荐项仍然是用户感兴趣领域的电影，因此有必要进行扩展校准（extended calibration probability），将用户兴趣之外的电影也加入推荐当中计算推荐列表中50部电影的类型概率和用户播放历史的类型概率之间的差异，然后对所有用户求平均值，区分差值的正负值上图中，所有用户播放历史的类型概率的平均值是基准点，平均差值的正负决定了线段的长度，如果是完美推荐，那么线段长度应该为0。如果下面的线段比上方的线段长，那么这种类型电影的推荐与用户兴趣相比是过少的；如果上下一样长，那么这种类型电影的推荐在所有测试用户上的平均推荐比例是正确的（此外，上下方线段的长度还暗示了与每个用户兴趣比例的平均差距），要明确，推荐应该为每个用户都进行标准化，因此期望较小的线段长度Documentary、IMAX、Musical、Western是under-represented（最下端接近0）Action、Adventure、Crime、Mystery、Sci-Fi是over-represented（上端比下端长）上图采用λ=0.99的校准度 CONCLUSION本文是基于用户的角度，未来的研究工作将基于item的角度，比如一个item的推荐频率是否是另一个item的两倍，那这个 item很可能被选中（consume）的次数也是两倍的 论文原文Calibrated Recommendations","categories":[{"name":"论文笔记","slug":"论文笔记","permalink":"http://yoursite.com/categories/论文笔记/"}],"tags":[{"name":"推荐系统","slug":"推荐系统","permalink":"http://yoursite.com/tags/推荐系统/"},{"name":"RecSys2018","slug":"RecSys2018","permalink":"http://yoursite.com/tags/RecSys2018/"}]},{"title":"Soul产品分析报告","slug":"Soul产品分析报告","date":"2018-07-26T09:11:03.000Z","updated":"2019-07-26T09:42:42.864Z","comments":true,"path":"2018/07/26/Soul产品分析报告/","link":"","permalink":"http://yoursite.com/2018/07/26/Soul产品分析报告/","excerpt":"产品概述产品信息产品名称：Soul版本：V3.0.12-18081801Slogan：跟随灵魂找到你简介：时下超火的弱关系社交，通过完成 30 秒的“灵魂测试”，来找到心灵相通的小伙伴。更有“Soul 荐”算法，秒推最能懂你的陌生人，随时随地聊天分享~还可能找到 Soulmate","text":"产品概述产品信息产品名称：Soul版本：V3.0.12-18081801Slogan：跟随灵魂找到你简介：时下超火的弱关系社交，通过完成 30 秒的“灵魂测试”，来找到心灵相通的小伙伴。更有“Soul 荐”算法，秒推最能懂你的陌生人，随时随地聊天分享~还可能找到 Soulmate 产品特色灵魂匹配：通过简单的性格测试和各种深入测试将用户划分为不同类型的群体，称之为星球，为用户推荐性格相近的好友，弱化了看脸的社交本质，更注重灵魂相近、趣味相投的内在共鸣。 匿名社交：为用户提供一个良好的发泄内心的不快与郁结的平台，将用户关注的重点从某个人转移到某件事情本身，评论更加客观，让用户更愿意更放心抒发情绪，大大减少社交压力。 用户分析性别分布：女性略多于男性，主要原因分析如下：1) 在现实社交中，女性相比于男性有很大一部分的压力是来源于外表的评价。而 Soul 这款应用的定位是基于灵魂的社交，目的是让用户抛开外表的因素，更注重内涵，这可以让女性从看脸的社会中脱离出来，是释放压力的一个选择。2) 女性相比男性更加感性，更希望找人倾诉自己内心想法、不快，而匿名的平台会给人安全感，让她们在倾诉时更放松更安心。3) 小清新的视觉效果和内容风格更符合女性的审美。无论是黑白加薄荷绿的配色，还是整体氛围以及用户动态的风格都很干净清爽。 年龄分布：绝大部分用户集中在 35 岁以下，41 岁以上的人群所占比重最少，主要原因分析如下：1) 25-30岁的比例最高，这是大学生和刚入职的年轻人集中的年龄段，他们刚步入社会，会面多方面的压力，需要一个宣泄的平台，Soul 的匿名功能很好的解决了这部分需求。2) 25-30岁的年轻人精力和时间充沛，更喜欢尝试好玩有趣的事物，Soul基于灵魂匹配的社交富有创意和新鲜感，这一点会很吸引他们。3) 25-35岁是父母催婚人群的集中年龄段，由于网络的便利和工作的繁忙，社交软件是很多人寻求伴侣的选择，Soul 基于灵魂的交友也很戳中他们的痛点。 用户需求1、寻找更多与自己性格相近、兴趣相同的人需求分析：在实际生活中，很难找到真正性格相近、兴趣相同的“知音”，人们对认同感和灵魂共鸣的需求在现实生活中无法得到充分满足。 解决方案：灵魂匹配的功能。根据性格测试结果匹配好友，推荐给用户可能合得来的人，同时用户可以在自己的主页展示自我，进而帮助用户找到志趣相投的人。 2、自我表达，倾诉心声需求分析：自身有很多想法或烦恼，但是由于现实环境等因素，不能或不愿告知身边的人，寻求倾听者倾诉心声。 解决方案：匿名聊天功能。一对一聊天加上匿名功能，营造一个相对私密的环境，给用户安全感，满足用户想倾诉心声又不想秘密被泄露的需求。 3、释放压力，放松心灵需求分析：在生活中，由于工作的压力、家庭的负担、社交的不快等各种负面情绪的堆积，会导致人们内心焦躁、效率降低等，形成恶性循环，需要一个宣泄的途径。 解决方案：匿名发布瞬间。每个用户的瞬间都能发布在广场上，获得更多用户的安慰和支持，满足用户放松心灵寻求安慰的需求。，而且是匿名的，用户不必担心被认出引起不快，满足用户释放压力畅所欲言的需求。 4、缓解孤独，寻求陪伴需求分析：25-35 岁的人群占据了 Soul 用户相当大的比例，这个年龄段的人正需要解决单身问题，父母的催促和自身的孤独，使他们想寻求陪伴。 解决方案：“soulmate”图标点亮的功能。用户通过不断的聊天来积攒亲密度，亲密度用“soulmate”图标的点亮程度来展示，对点亮图标的期待使用户坚持的聊下去，进而实现用户关系的长久建立，满足用户寻求陪伴的需要。 5、展现自我，获得关注需求分析：Soul 的主要用户是学生党和年轻人，这个年龄段的人群有很强的表现欲，希望展现自己的性，获得认同。 解决方案：展现自我的广场和关注功能。用户将原创内容发布在广场上，所有人可以见，庞大的用户数量满足用户展现自我和想获取更多关注的需求。 产品分析产品结构图 主要功能1、星球 – 推荐人列表、匹配好友亮点：1) 推荐列表以球形展示，加上深蓝色的背景和自转的动画，很符合“星球”的概念；转动星球查看所有推荐用户，增添趣味性。2) 筛选条件除了年龄、性别，还包括星座。年轻人会更多地关注与星座相关的因素，符合 Soul 绝大多数用户的需求。3) 球形推荐列表中只显示个性签名和匹配度。信息简单却精确反应了用户最关心的信息：个性签名会反应一个人的性格特征，匹配度便于用户筛选；此外还特别注明了最匹配和最新人，是用户比较关心的信息。4) 普通匹配与语音匹配，玩法多样。 不足：1) 摇动手机切换星球时，会发现列表中的许多用户没有改变，需多次摇动手机才能看到更多的推荐用户。2) 语音匹配只有在通话期间有关注的按钮，如果用户没有注意到，或者忘记关注，在语音结束后就无法加好友。 2、广场 – 瞬间展示亮点：1) 置顶瞬间。系统根据点赞和评论人数进行推荐的瞬间，每次刷新都有新推荐，可以时刻发现最热门的话题。2) 发布的瞬间只会显示用户所在星球。一方面是为了匿名，另一方面根据用户所属星球也可以了解该用户大致的性格特质，便于用户寻找与自己所属同一星球的其他用户。3) 推荐音频悬浮图标的删除采用 Android 系统删除 App 的形式，简单易懂，减少了用户的学习成本。4) 右下角的按钮在下拉和静止时是通知消息，可以在浏览广场时随时查看评论、回复和点赞消息；在上拉时变为回到顶部，节省页面空间。5) 广场中瞬间的三个分类：推荐、关注和最新：推荐：系统推荐比较优质的内容；关注：感兴趣的用户发布的瞬间，让用户不会错过关注的人的动态；最新：最新最及时的用户消息，间接地告诉用户这些人是“在线”的。6) 可以删除其他用户的瞬间不显示，表示对这一类的瞬间内容无感，便于系统更精确地把握用户喜好，使推荐内容更符合用户口味。 不足：没有显示对瞬间的评论，需要点开瞬间查看详情才能看到其他用户的评论。不仅仅是瞬间的内容，有时评论也可以激起用户的热情，可以根据点赞筛选出热门评论和瞬间一起发布在广场页面上，增进用户间的互动。 3、聊天 – 好友互动亮点：1) 状态可选：想要聊天，允许匹配，拒绝匹配。当用户想要聊天时，很可能主动找其他用户聊天，这时进行用户推荐可以增进互动；当允许匹配时，可以将用户推荐给其他用户，增加被关注的几率；当用户拒绝匹配时，可以避免被打扰。2) 亲密度的显示，即“soulmate”图标的点亮程度。随着聊天时间的增长，图标会逐渐被点亮，在这个过程中，用户会对点亮图标抱有期待，会坚持和好友聊天，提高了用户的留存率和使用时长。 不足：消息显示已读（气泡旁的小绿点），当用户发现对方已读不回时，会增加用户的负面感受。 4、发布瞬间亮点：1) 特色功能：共创音频。可以增进用户之间的互动。而且原创者在发布语音的可选择是否允许共创，避免了出现其他用户不经允许滥用他人音频情况的发生。2) 多种权限可供选择，维护原创者的权利。3) 可添加标签，包括推荐标签和自定义标签。可以作为瞬间的分类要素，用户可以根据标签进行快捷搜索，找到更多有相同标签的瞬间。 不足：添加状态权限的按钮不明显，也没有文字提示，导致许多用户会忽略这个功能。 5、趣味测试优点：1) 测试过程中：一题一屏，消减用户看到题目较多时的厌烦情绪，还可以让用户的注意力集中在一道题目上，提高测试的准确度；显示测试进度，减少用户在题目层出不穷时的不耐烦。2) 测试结束后有对题目准确性的评价，可以为其他用户提供一个选择的参考标准。3) 趣味测试的功能以及其内容的定时更新，一方面满足了用户的新鲜感，是很多年轻人都喜欢的一类娱乐消遣；另一方面可以成为用户间交流的话题，增加用户间的互动。 不足：已做测试与未做测试混杂在一起，且“已测试过”和“未测试过”的标注不显眼。用户在选择测试时大多情况下不会按顺序选择，导致已做测试和未做测试混杂在一起，而且已做过的测试多数情况下用户是不想再做一遍的，会给用户的筛选造成干扰。个人觉得可以将趣味测试分为两栏：已做和未做，便于用户筛选。 总结Soul 主打灵魂匹配，注重内在而忽略外表的理念很吸引眼球，也是新用户选择 Soul 的主要原因；玩法多样新奇，星球、测试、瞬间、亲密度等，可以让用户在短期内保持新鲜感。但是也存在不足的方面，主要有以下三点： 一、未能真正做到灵魂交友Soul 给人的整体感觉是较为舒适清爽的，不像其他交友软件那样鱼龙混杂，但广场上依然存在用户发布自拍的现象，违背了灵魂交友的主题，会让许多用户感到反感。个人有两点建议：一是优化推荐算法，当检测到用户多次删除掉包含自拍的瞬间后，不再向用户推荐包含自拍的瞬间；另外一点是将是否看自拍的选择权交给用户，为包含自拍的瞬间打上标签，用户可选择是否屏蔽。 二、破冰的互动有所欠缺，尬聊依然存在。Soul 希望通过测试结果匹配好友的方法让用户之间的互动更加密切，但在现实的体验中，尬聊依然存在。与陌生人之间的交流需要话题的支撑，而两个都很内向、缺乏社交技巧、不会寻找话题的用户进行交流，势必会产生尬聊的局面，这时最应该做的是打破这个僵局，显然在这点上 Soul 做的还不够。这也是导致老用户流失的主要原因。个人建议增加一些破冰的互动，比如在聊天界面增加一个问答的功能，系统随机出一道趣味题目，一方面为交流增加话题，另一方面通过问答增进相互之间的了解，两个人了解的多了，话题自然而然就会变多，从而达到破冰的目的。 三、服务器不稳定服务器不稳定，经常崩溃是在 Soul 广场上经常能看到的吐槽，也带给用户及其不友好的体验。","categories":[{"name":"产品经理","slug":"产品经理","permalink":"http://yoursite.com/categories/产品经理/"}],"tags":[{"name":"产品分析","slug":"产品分析","permalink":"http://yoursite.com/tags/产品分析/"}]},{"title":"简单的HTTP代理服务器的实现","slug":"简单的HTTP代理服务器的实现（基本功能-拓展功能）","date":"2018-05-08T13:22:38.000Z","updated":"2019-07-26T08:31:20.178Z","comments":true,"path":"2018/05/08/简单的HTTP代理服务器的实现（基本功能-拓展功能）/","link":"","permalink":"http://yoursite.com/2018/05/08/简单的HTTP代理服务器的实现（基本功能-拓展功能）/","excerpt":"实现功能1、在指定端口（例如 8080）接收来自客户的 HTTP 请求并且根据其中的 URL 地址访问该地址所指向的 HTTP 服务器（原服务器），接收 HTTP 服务器的响应报文，并将响应报文转发给对应的客户进行浏览2、支持 Cache 功能：求能缓存原服务器响应的对象，并能够通过修改请求报文（添加 If-Modified-Since 头行），向原服务器确认缓存对象是否是最新版本3、网站过滤：允许/不允许重点内容访问某些网站4、用户过滤：支持/不支持某些用户访问外部网站5、网站引导：将用户对某个网站的访问引导至一个模拟网站（钓鱼）","text":"实现功能1、在指定端口（例如 8080）接收来自客户的 HTTP 请求并且根据其中的 URL 地址访问该地址所指向的 HTTP 服务器（原服务器），接收 HTTP 服务器的响应报文，并将响应报文转发给对应的客户进行浏览2、支持 Cache 功能：求能缓存原服务器响应的对象，并能够通过修改请求报文（添加 If-Modified-Since 头行），向原服务器确认缓存对象是否是最新版本3、网站过滤：允许/不允许重点内容访问某些网站4、用户过滤：支持/不支持某些用户访问外部网站5、网站引导：将用户对某个网站的访问引导至一个模拟网站（钓鱼） 完整的代码（VS2015）：https://github.com/Salanghei/ProxyServer 实现步骤1、加载套接字库，创建套接字2、初始化套接字：设置 IP 地址和端口等属性3、代理服务器接收客户端发送的 TCP 请求报文，并解析 HTTP 头部（method, url, host 等信息）4、拓展功能：网站过滤，用户过滤，网站引导，检查是否有本地缓存（改造HTTP头添加 If-Modified-Since 字段）5、代理连接到服务器，并将客户端发送的 HTTP 数据报文转发给目标服务器6、接收目标服务器的响应报文 ，解析报文头信息：状态码为304时不需要更新缓存，并将本地缓存转发给客户端；否则直接将响应报文转发给客户端，并进行缓存7、关闭套接字 关于程序的运行为了使浏览器访问网址时通过代理服务器，必须进行相关设置，以 Chrome 浏览器设置为例，打开 Chrome 浏览器中的设置，点击高级，选择打开代理设置：选择局域网设置，按如图所示进行配置 然后程序就可以监听10240端口啦~ 代码是根据指导书改编的，菜鸟一枚，还望大神们多多指教~","categories":[{"name":"踩过的坑","slug":"踩过的坑","permalink":"http://yoursite.com/categories/踩过的坑/"}],"tags":[{"name":"代理","slug":"代理","permalink":"http://yoursite.com/tags/代理/"}]},{"title":"远程服务器 ubuntu16.04 caffe+matlab r2014b+python+cpu配置(三)","slug":"远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（三）","date":"2018-02-18T09:14:50.000Z","updated":"2019-07-26T08:28:29.740Z","comments":true,"path":"2018/02/18/远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（三）/","link":"","permalink":"http://yoursite.com/2018/02/18/远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（三）/","excerpt":"Caffe配置过程中的一些问题 参考链接：https://groups.google.com/forum/#!topic/caffe-users/x8Y26vf-or8http://blog.csdn.net/striker_v/article/details/52890747http://www.echojb.com/cuda/2017/05/05/375103.htmlhttp://www.caffecn.cn/?/question/1113https://blog.csdn.net/dym755833564/article/details/77965966","text":"Caffe配置过程中的一些问题 参考链接：https://groups.google.com/forum/#!topic/caffe-users/x8Y26vf-or8http://blog.csdn.net/striker_v/article/details/52890747http://www.echojb.com/cuda/2017/05/05/375103.htmlhttp://www.caffecn.cn/?/question/1113https://blog.csdn.net/dym755833564/article/details/77965966 GCC版本太新在make过程中可能 string.h ‘memcy’ was not declared in this scope的错误，这是因为ubuntu中gcc编译器版本太新，解决方法是打开Makefile文件，找到下面这行代码（大概在409行左右）： 1NVCCFLAGS += -ccbin=(CXX)−Xcompiler−fPIC(COMMON_FLAGS) 将其改为： 1NVCCFLAGS += -D_FORCE_INLINES -ccbin=(CXX)−Xcompiler−fPIC(COMMON_FLAGS) make matcaffe时报错12345678910111213141516171819202122232425/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp: In function ‘void delete_solver(int, mxArray**, int, const mxArray**)’:/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:208:3: warning: lambda expressions only available with -std=c++11 or -std=gnu++11 [enabled by default]/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:208:4: error: no matching function for call to ‘remove_if(std::vector&lt;boost::shared_ptr&lt;caffe::Solver&lt;float&gt; &gt; &gt;::iterator, std::vector&lt;boost::shared_ptr&lt;caffe::Solver&lt;float&gt; &gt; &gt;::iterator, delete_solver(int, mxArray**, int, const mxArray**)::&lt;lambda(const boost::shared_ptr&lt;caffe::Solver&lt;float&gt; &gt;&amp;)&gt;)’/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:208:4: note: candidate is:In file included from /usr/include/c++/4.7/algorithm:63:0, from ./include/caffe/blob.hpp:4, from ./include/caffe/caffe.hpp:7, from /home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:18:/usr/include/c++/4.7/bits/stl_algo.h:1166:5: note: template&lt;class _FIter, class _Predicate&gt; _FIter std::remove_if(_FIter, _FIter, _Predicate)/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:208:4: error: template argument for ‘template&lt;class _FIter, class _Predicate&gt; _FIter std::remove_if(_FIter, _FIter, _Predicate)’ uses local type ‘delete_solver(int, mxArray**, int, const mxArray**)::&lt;lambda(const boost::shared_ptr&lt;caffe::Solver&lt;float&gt; &gt;&amp;)&gt;’/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:208:4: error: trying to instantiate ‘template&lt;class _FIter, class _Predicate&gt; _FIter std::remove_if(_FIter, _FIter, _Predicate)’/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp: In function ‘void delete_net(int, mxArray**, int, const mxArray**)’:/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:293:3: warning: lambda expressions only available with -std=c++11 or -std=gnu++11 [enabled by default]/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:293:4: error: no matching function for call to ‘remove_if(std::vector&lt;boost::shared_ptr&lt;caffe::Net&lt;float&gt; &gt; &gt;::iterator, std::vector&lt;boost::shared_ptr&lt;caffe::Net&lt;float&gt; &gt; &gt;::iterator, delete_net(int, mxArray**, int, const mxArray**)::&lt;lambda(const boost::shared_ptr&lt;caffe::Net&lt;float&gt; &gt;&amp;)&gt;)’/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:293:4: note: candidate is:In file included from /usr/include/c++/4.7/algorithm:63:0, from ./include/caffe/blob.hpp:4, from ./include/caffe/caffe.hpp:7, from /home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:18:/usr/include/c++/4.7/bits/stl_algo.h:1166:5: note: template&lt;class _FIter, class _Predicate&gt; _FIter std::remove_if(_FIter, _FIter, _Predicate)/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:293:4: error: template argument for ‘template&lt;class _FIter, class _Predicate&gt; _FIter std::remove_if(_FIter, _FIter, _Predicate)’ uses local type ‘delete_net(int, mxArray**, int, const mxArray**)::&lt;lambda(const boost::shared_ptr&lt;caffe::Net&lt;float&gt; &gt;&amp;)&gt;’/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:293:4: error: trying to instantiate ‘template&lt;class _FIter, class _Predicate&gt; _FIter std::remove_if(_FIter, _FIter, _Predicate)’Makefile:518: recipe for target &apos;matlab/+caffe/private/caffe_.mexa64&apos; failedmake: *** [matlab/+caffe/private/caffe_.mexa64] Error 255 修改Makefile里面的CXXFLAGS，添加CXXFLAGS += -std=c++11.然后重新编译就可以了，即： 12CXXFLAGS += -MMD -MPCXXFLAGS += -std=c++11 注意： 是添加不是修改 make mattest时报错：123456789Invalid MEX-file &apos;caffe/matlab/+caffe/private/caffe_.mexa64&apos;:caffe/matlab/+caffe/private/caffe_.mexa64: undefinedsymbol: _ZN2cv8imencodeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_11_InputArrayERSt6vectorIhSaIhEERKSB_IiSaIiEE。 Error in caffe.set_mode_cpu (line 5)caffe_(&apos;set_mode_cpu&apos;); Error in caffe.run_tests (line 6)caffe.set_mode_cpu(); 有些说法是要执行如下命令： 12export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libopencv_highgui.so.2.4:/usr/lib/x86_64-linux-gnu/libopencv_imgproc.so.2.4:/usr/lib/x86_64-linux-gnu/libopencv_core.so.2.4:/usr/lib/x86_64-linux-gnu/libstdc++.so.6:/usr/lib/x86_64-linux-gnu/libfreetype.so.6export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libstdc++.so.6 但是再次运行make mattest时会有新错误： 1234malloc: unknown:0: assertion botchedfree: called with unallocated block argumentlast command: (null)Aborting...find: ‘bash’ terminated by signal 6 虽然最后还是能运行成功，但发现在运行bash指令时无法成功执行，纠结了好久发现是这里没有彻底解决问题，解决方法是： 将 libopencv_imgproc.so.2.4, libopencv_core.so.2.4, libopencv_highgui.so.2.4三个文件拷贝到/usr/local/MATLAB/R2016b/bin/glnxa64/中 12345678$ sudo mv /usr/local/MATLAB/R2016b/bin/glnxa64/libopencv_imgproc.so.2.4 /usr/local/MATLAB/R2016b/bin/glnxa64/libopencv_imgproc.so.2.4.old$ sudo cp /usr/lib/x86_64-linux-gnu/libopencv_imgproc.so.2.4 /usr/local/MATLAB/R2016b/bin/glnxa64/$ sudo mv /usr/local/MATLAB/R2016b/bin/glnxa64/libopencv_core.so.2.4 /usr/local/MATLAB/R2016b/bin/glnxa64/libopencv_core.so.2.4.old$ sudo cp /usr/lib/x86_64-linux-gnu/libopencv_core.so.2.4 /usr/local/MATLAB/R2016b/bin/glnxa64/$ sudo mv /usr/local/MATLAB/R2016b/bin/glnxa64/libopencv_highgui.so.2.4 /usr/local/MATLAB/R2016b/bin/glnxa64/libopencv_highgui.so.2.4.old$ sudo cp /usr/lib/x86_64-linux-gnu/libopencv_highgui.so.2.4 /usr/local/MATLAB/R2016b/bin/glnxa64/ 再执行 1export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libstdc++.so.6 问题就解决啦，bash指令也没有问题啦 关于opencvmake all时报错，错误信息： 1234567...CXX/LD -o .build_release/tools/convert_imageset.bin .build_release/lib/libcaffe.so: undefined reference to cv::imread(cv::String const&amp;, int)’ .build_release/lib/libcaffe.so: undefined reference to cv::imencode(cv::String const&amp;, cv::_InputArray const&amp;, std::vector &gt;&amp;, std::vector &gt; const&amp;)’ .build_release/lib/libcaffe.so: undefined reference to cv::imdecode(cv::_InputArray const&amp;, int)’ collect2: error: ld returned 1 exit status ...Makefile:518: recipe for target &apos;matlab/+caffe/private/caffe_.mexa64&apos; failedmake: *** [matlab/+caffe/private/caffe_.mexa64] Error 255 首先，已经配置过了opencv，可以这样查询安装版本： 1$ pkg-config --modversion opencv 所以出现上面的错误，应该是opencv_imgcodecs链接的问题，比较有效的解决方案是，把opencv需要的lib添加到Makefile文件中，找到LIBRARIES（在PYTHON_LIBRARIES := boost_python python2.7 前一行），并进行修改，向该句末尾添加： 1opencv_core opencv_highgui opencv_imgproc opencv_imgcodecs 我的Makefile文件修改后为： 1LIBRARIES += glog gflags protobuf boost_system boost_filesystem m hdf5_hl hdf5 opencv_core opencv_highgui opencv_imgproc opencv_imgcodecs","categories":[{"name":"踩过的坑","slug":"踩过的坑","permalink":"http://yoursite.com/categories/踩过的坑/"}],"tags":[{"name":"caffe","slug":"caffe","permalink":"http://yoursite.com/tags/caffe/"}]},{"title":"远程服务器 ubuntu16.04 caffe+matlab r2014b+python+cpu配置(二)","slug":"远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（二）","date":"2018-02-18T08:38:29.000Z","updated":"2019-07-26T08:28:02.619Z","comments":true,"path":"2018/02/18/远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（二）/","link":"","permalink":"http://yoursite.com/2018/02/18/远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（二）/","excerpt":"配置Caffe+Matlab+Python（CPU-ONLY） 本文参考文章：ubuntu16.04, Matlab2016b caffe编译安装：https://www.cnblogs.com/haoliuhust/p/7738920.html官方安装文档：http://caffe.berkeleyvision.org/installation.htmlUbuntu16.04安装Caffe(CPU Only)：http://blog.csdn.net/muzilinxi90/article/details/53673184","text":"配置Caffe+Matlab+Python（CPU-ONLY） 本文参考文章：ubuntu16.04, Matlab2016b caffe编译安装：https://www.cnblogs.com/haoliuhust/p/7738920.html官方安装文档：http://caffe.berkeleyvision.org/installation.htmlUbuntu16.04安装Caffe(CPU Only)：http://blog.csdn.net/muzilinxi90/article/details/53673184 安装依赖项1234$ sudo apt update$ sudo apt search openblas$ sudo apt install libopenblas-dev$ sudo update-alternatives --config libblas.so.3 12$ sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler$ sudo apt-get install --no-install-recommends libboost-all-dev 1$ sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev 此外还要安装git，cmake 12$ sudo apt-get install git$ sudo apt-get install cmake 下载Caffe源码12$ git clone https://github.com/BVLC/caffe.git$ cd caffe/ python 依赖库 1234$ cd python/$ apt-get install python-pip $ pip install --upgrade pip$ for req in $(cat requirements.txt); do pip install $req; done 编译Caffe在Caffe文件夹下，拷贝一份Makefile.config.example并重命名成Makefile.config，修改该配置文件： 1$ cp Makefile.config.example Makefile.config 打开Makefile.config（vi Makefile.config），因为这里没有配置GPU，所以去掉CPU_ONLY := 1前面的注释，MATLAB_DIR后改为matlab的安装地址 由于Ubuntu16.04文件结构的变化，#Whatever else you find you need goes here.处要改成下面这样： 123# Whatever else you find you need goes here. INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu/hdf5/serial 注意： 每条路径之间一定要有空格，否则仍然会报错 接下来编译Caffe 123$ make all$ make test$ make runtest 编译python接口1$ make pycaffe 进入caffe/python，打开python，输入import caffe，如果没有报错则配置成功 编译matlab接口12$ make matcaffe$ make mattest","categories":[{"name":"踩过的坑","slug":"踩过的坑","permalink":"http://yoursite.com/categories/踩过的坑/"}],"tags":[{"name":"caffe","slug":"caffe","permalink":"http://yoursite.com/tags/caffe/"}]},{"title":"远程服务器 ubuntu16.04 caffe+matlab r2014b+python+cpu配置(一)","slug":"远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（一）","date":"2018-02-11T13:04:12.000Z","updated":"2019-07-26T08:28:10.484Z","comments":true,"path":"2018/02/11/远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（一）/","link":"","permalink":"http://yoursite.com/2018/02/11/远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（一）/","excerpt":"远程服务器Ubuntu16.04 安装Matlab R2014b 本文参考链接：http://blog.csdn.net/wangpengfei163/article/details/47311041 所需资源下载：链接: https://pan.baidu.com/s/1bqotI03 密码: w28s本文中只涉及到libmwservices.so.rar，MATLAB_R2014B_MAC_LINUX_crack.zip，R2014b_glnxa64.iso三个文件。","text":"远程服务器Ubuntu16.04 安装Matlab R2014b 本文参考链接：http://blog.csdn.net/wangpengfei163/article/details/47311041 所需资源下载：链接: https://pan.baidu.com/s/1bqotI03 密码: w28s本文中只涉及到libmwservices.so.rar，MATLAB_R2014B_MAC_LINUX_crack.zip，R2014b_glnxa64.iso三个文件。 替换install.jar文件将R2014b_glnxa64.iso/java/jar/install.jar替换为MATLAB_R2014B_MAC_LINUX_crack.zip中的install.jar文件 可以使用UltraIso工具（试用版仅支持100M以下文件的改动，注册码请自行百度） 上传文件到服务器应该是个笨方法吧，实在不清楚在远程服务器上应该怎么挂载镜像了【捂脸】 使用scp命令上传文件：scp local_file remote_username@remote_ip:remote_folder 上传文件的过程有点漫长，6G的文件传了一晚上。。。 挂载镜像建议使用root用户，文件挂载命令格式如下： 1mount -o loop,rw /home/R2014b_glnxa64.iso /matlab 其中/matlab是要挂载的文件夹目录，建议新建一个文件夹。 安装Matlab在SSH上远程安装采用第二种方式，输入如下命令： 1# ./install -mode silent -fileInstallationKey 29797-39064-48306-32452 -agreeToLicense yes -activationPropertiesFile /home/activate.ini -destinationFolder /usr/local/MATLAB/R2014b 其中activate.ini文件需要按照文件内容进行设置，其中的license.lic是MATLAB_R2014B_MAC_LINUX_crack.zip中的文件，需将其解压，路径自行设置 12activateCommand=activateOfflinelicenseFile=/home/license.lic 如果未成功激活，可以在安装结束后使用如下命令激活，也需要设置activate.ini 1#/usr/local/MATLAB/R2014b/bin/activate_matlab.sh -propertiesFile /home/activate.ini 破解Matlab将libmwservices.so.rar中的so文件拷贝到/usr/local/MATLAB/R2014b/bin/glnxa64/文件夹下 12rm -rf /usr/local/MATLAB/R2014b/bin/glnxa64/libmwservices.socp /home/libmwservices.so /usr/local/MATLAB/R2014b/bin/glnxa64/ 安装成功，运行/usr/local/MATLAB/R2014b/bin/matlab 配置环境变量1vi /etc/profile 在文件末尾添加 1export PATH=/usr/local/MATLAB/R2014b/bin:$PATH 保存并退出后使设置生效 1source /etc/profile 此时直接输入matlab即可启动软件","categories":[{"name":"踩过的坑","slug":"踩过的坑","permalink":"http://yoursite.com/categories/踩过的坑/"}],"tags":[{"name":"caffe","slug":"caffe","permalink":"http://yoursite.com/tags/caffe/"}]},{"title":"Java Web的新浪云SAE部署","slug":"Java-Web的新浪云SAE部署","date":"2017-10-10T06:24:50.000Z","updated":"2019-07-26T08:31:06.131Z","comments":true,"path":"2017/10/10/Java-Web的新浪云SAE部署/","link":"","permalink":"http://yoursite.com/2017/10/10/Java-Web的新浪云SAE部署/","excerpt":"创建应用在新浪云注册后即可在SAE平台上创建应用，在云平台SAE中点击 应用管理 &gt; 创建新应用，选择相应的部署环境和云空间配置，填写好应用信息，其中应用名称一般与项目名称一致：","text":"创建应用在新浪云注册后即可在SAE平台上创建应用，在云平台SAE中点击 应用管理 &gt; 创建新应用，选择相应的部署环境和云空间配置，填写好应用信息，其中应用名称一般与项目名称一致： 进入管理应用页面，总览中显示的二级域名即为网站的网址，Access Key为数据库连接时的用户名，Secret Key为密码： 配置数据库点击 数据库与缓存服务 &gt; 共享型MySQL，点击创建MySQL创建数据库，点击管理选项可进入数据库的管理页面，点击SQL选项卡，即可对数据库进行各种操作，与MySQL的命令行类似，可以通过命令建表，也可以导入数据表： 数据库连接在项目中要做好相应修改，相关代码在官方文档中已经给出： 只需将数据库连接修改为： 123456789101112String driver = &quot;com.mysql.jdbc.Driver&quot;;String username = System.getenv(&quot;ACCESSKEY&quot;);String password = System.getenv(&quot;SECRETKEY&quot;);//System.getenv(&quot;MYSQL_HOST_S&quot;); 为从库，只读String dbUrl = String.format(&quot;jdbc:mysql://%s:%s/%s&quot;, System.getenv(&quot;MYSQL_HOST&quot;), System.getenv(&quot;MYSQL_PORT&quot;), System.getenv(&quot;MYSQL_DB&quot;));try &#123; Class.forName(driver).newInstance(); con = DriverManager.getConnection(dbUrl, username, password); // ...&#125; catch (Exception e) &#123; // ...&#125; 修改后将项目导出为war包，点击 应用 &gt; 代码管理，将导出的war包上传。至此，云平台部署完成，通过二级域名即可访问。","categories":[{"name":"踩过的坑","slug":"踩过的坑","permalink":"http://yoursite.com/categories/踩过的坑/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Windows下在Java中调用GraphViz","slug":"Windows下在Java中调用GraphViz","date":"2017-07-23T02:59:36.000Z","updated":"2019-07-26T08:30:07.305Z","comments":true,"path":"2017/07/23/Windows下在Java中调用GraphViz/","link":"","permalink":"http://yoursite.com/2017/07/23/Windows下在Java中调用GraphViz/","excerpt":"相关文章及代码How to call GraphViz from java：https://stackoverflow.com/questions/26481910/how-to-call-graphviz-from-javajava – java中调用GraphViz：http://blog.csdn.net/TheSnowBoy_2/article/details/52540874windows下Graphviz安装及入门教程：http://blog.csdn.net/lanchunhui/article/details/49472949","text":"相关文章及代码How to call GraphViz from java：https://stackoverflow.com/questions/26481910/how-to-call-graphviz-from-javajava – java中调用GraphViz：http://blog.csdn.net/TheSnowBoy_2/article/details/52540874windows下Graphviz安装及入门教程：http://blog.csdn.net/lanchunhui/article/details/49472949 GraphViz环境变量的配置安装好GraphViz后，将Graphviz安装目录下的bin文件夹添加到Path环境变量中： 验证：进入命令行界面，输入dot -version回车，会显示GraphViz相关的版本信息，则配置成功： 为GraphViz的java的API建立配置文件在工程目录下创建test文件夹，在test文件夹下创建tmpDir文件夹，此文件夹用来存放临时文件。再在工程目录下创建config文件夹，并将文件config.properties放在该文件夹内。 config.properties内容如下： 1234567############################################################### Windows Configurations ################################################################ The dir. where temporary files will be created.tempDirForWindows10 = E:/temp# Where is your dot program located? It will be called externally.dotForWindows10 = &quot;E:/software_daily/FOR_LEARN/graphViz/bin/dot.exe&quot; 将其中tempDirForWindows10和dotForWindows10中的Windows10改为相应的Windows版本，dotForWindows10后的路径改为dot.exe的安装路径。 ###GraphViz的java API源代码import java.io.BufferedReader;import java.io.BufferedWriter;import java.io.DataInputStream;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.FileWriter;import java.io.InputStreamReader;import java.util.Properties;/*** &lt;dl&gt;* &lt;dt&gt;Purpose: GraphViz Java API* &lt;dd&gt;** &lt;dt&gt;Description:* &lt;dd&gt; With this Java class you can simply call dot* from your Java programs.* &lt;dt&gt;Example usage:* &lt;dd&gt;* &lt;pre&gt;* GraphViz gv = new GraphViz();* gv.addln(gv.start_graph());* gv.addln(&quot;A -&gt; B;&quot;);* gv.addln(&quot;A -&gt; C;&quot;);* gv.addln(gv.end_graph());* System.out.println(gv.getDotSource());** String type = &quot;gif&quot;;* File out = new File(&quot;out.&quot; + type); // out.gif in this example* gv.writeGraphToFile( gv.getGraph( gv.getDotSource(), type ), out );* &lt;/pre&gt;* &lt;/dd&gt;** &lt;/dl&gt;** @version v0.5.1, 2013/03/18 (March) -- Patch of Juan Hoyos (Mac support)* @version v0.5, 2012/04/24 (April) -- Patch of Abdur Rahman (OS detection + start subgraph + * read config file)* @version v0.4, 2011/02/05 (February) -- Patch of Keheliya Gallaba is added. Now you* can specify the type of the output file: gif, dot, fig, pdf, ps, svg, png, etc.* @version v0.3, 2010/11/29 (November) -- Windows support + ability to read the graph from a text file* @version v0.2, 2010/07/22 (July) -- bug fix* @version v0.1, 2003/12/04 (December) -- first release* @author Laszlo Szathmary (&lt;a href=&quot;jabba.laci@gmail.com&quot;&gt;jabba.laci@gmail.com&lt;/a&gt;)*/public class GraphViz&#123; /** * Detects the client&apos;s operating system. */ private final static String osName = System.getProperty(&quot;os.name&quot;).replaceAll(&quot;\\\\s&quot;,&quot;&quot;); /** * Load the config.properties file. */ private final static String cfgProp = &quot;config/config.properties&quot;; private final static Properties configFile = new Properties() &#123; private final static long serialVersionUID = 1L; &#123; try &#123; load(new FileInputStream(cfgProp)); &#125; catch (Exception e) &#123;&#125; &#125; &#125;; /** * The dir. where temporary files will be created. */private static String TEMP_DIR = &quot;test/tmpDir&quot;; /** * Where is your dot program located? It will be called externally. */private static String DOT = configFile.getProperty(&quot;dotFor&quot; + osName); /** * The image size in dpi. 96 dpi is normal size. Higher values are 10% higher each. * Lower values 10% lower each. * * dpi patch by Peter Mueller */ private int[] dpiSizes = &#123;46, 51, 57, 63, 70, 78, 86, 96, 106, 116, 128, 141, 155, 170, 187, 206, 226, 249&#125;; /** * Define the index in the image size array. */ private int currentDpiPos = 7; /** * Increase the image size (dpi). */ public void increaseDpi() &#123; if ( this.currentDpiPos &lt; (this.dpiSizes.length - 1) ) &#123; ++this.currentDpiPos; &#125; &#125; /** * Decrease the image size (dpi). */ public void decreaseDpi() &#123; if (this.currentDpiPos &gt; 0) &#123; --this.currentDpiPos; &#125; &#125; public int getImageDpi() &#123; return this.dpiSizes[this.currentDpiPos]; &#125; /** * The source of the graph written in dot language. */ private StringBuilder graph = new StringBuilder(); /** * Constructor: creates a new GraphViz object that will contain * a graph. */ public GraphViz() &#123; &#125; /** * Returns the graph&apos;s source description in dot language. * @return Source of the graph in dot language. */ public String getDotSource() &#123; return this.graph.toString(); &#125; /** * Adds a string to the graph&apos;s source (without newline). */ public void add(String line) &#123; this.graph.append(line); &#125; /** * Adds a string to the graph&apos;s source (with newline). */ public void addln(String line) &#123; this.graph.append(line + &quot;\\n&quot;); &#125; /** * Adds a newline to the graph&apos;s source. */ public void addln() &#123; this.graph.append(&apos;\\n&apos;); &#125; public void clearGraph()&#123; this.graph = new StringBuilder(); &#125; /** * Returns the graph as an image in binary format. * @param dot_source Source of the graph to be drawn. * @param type Type of the output image to be produced, e.g.: gif, dot, fig, pdf, ps, svg, png. * @return A byte array containing the image of the graph. */ public byte[] getGraph(String dot_source, String type) &#123; File dot; byte[] img_stream = null; try &#123; dot = writeDotSourceToFile(dot_source); if (dot != null) &#123; img_stream = get_img_stream(dot, type); if (dot.delete() == false) System.err.println(&quot;Warning: &quot; + dot.getAbsolutePath() + &quot; could not be deleted!&quot;); return img_stream; &#125; return null; &#125; catch (java.io.IOException ioe) &#123; return null; &#125; &#125; /** * Writes the graph&apos;s image in a file. * @param img A byte array containing the image of the graph. * @param file Name of the file to where we want to write. * @return Success: 1, Failure: -1 */ public int writeGraphToFile(byte[] img, String file) &#123; File to = new File(file); return writeGraphToFile(img, to); &#125; /** * Writes the graph&apos;s image in a file. * @param img A byte array containing the image of the graph. * @param to A File object to where we want to write. * @return Success: 1, Failure: -1 */ public int writeGraphToFile(byte[] img, File to) &#123; try &#123; FileOutputStream fos = new FileOutputStream(to); fos.write(img); fos.close(); &#125; catch (java.io.IOException ioe) &#123; return -1; &#125; return 1; &#125; /** * It will call the external dot program, and return the image in * binary format. * @param dot Source of the graph (in dot language). * @param type Type of the output image to be produced, e.g.: gif, dot, fig, pdf, ps, svg, png. * @return The image of the graph in .gif format. */ private byte[] get_img_stream(File dot, String type) &#123; File img; byte[] img_stream = null; try &#123; img = File.createTempFile(&quot;graph_&quot;, &quot;.&quot;+type, new File(GraphViz.TEMP_DIR)); Runtime rt = Runtime.getRuntime(); // patch by Mike Chenault String[] args = &#123;DOT, &quot;-T&quot;+type, &quot;-Gdpi=&quot;+dpiSizes[this.currentDpiPos], dot.getAbsolutePath(), &quot;-o&quot;, img.getAbsolutePath()&#125;; Process p = rt.exec(args); p.waitFor(); FileInputStream in = new FileInputStream(img.getAbsolutePath()); img_stream = new byte[in.available()]; in.read(img_stream); // Close it if we need to if( in != null ) in.close(); if (img.delete() == false) System.err.println(&quot;Warning: &quot; + img.getAbsolutePath() + &quot; could not be deleted!&quot;); &#125; catch (java.io.IOException ioe) &#123; System.err.println(&quot;Error: in I/O processing of tempfile in dir &quot; + GraphViz.TEMP_DIR+&quot;\\n&quot;); System.err.println(&quot; or in calling external command&quot;); ioe.printStackTrace(); &#125; catch (java.lang.InterruptedException ie) &#123; System.err.println(&quot;Error: the execution of the external program was interrupted&quot;); ie.printStackTrace(); &#125; return img_stream; &#125; /** * Writes the source of the graph in a file, and returns the written file * as a File object. * @param str Source of the graph (in dot language). * @return The file (as a File object) that contains the source of the graph. */ private File writeDotSourceToFile(String str) throws java.io.IOException &#123; File temp; try &#123; temp = File.createTempFile(&quot;dorrr&quot;,&quot;.dot&quot;, new File(GraphViz.TEMP_DIR)); FileWriter fout = new FileWriter(temp); fout.write(str); BufferedWriter br=new BufferedWriter(new FileWriter(&quot;dotsource.dot&quot;)); br.write(str); br.flush(); br.close(); fout.close(); &#125; catch (Exception e) &#123; System.err.println(&quot;Error: I/O error while writing the dot source to temp file!&quot;); return null; &#125; return temp; &#125; /** * Returns a string that is used to start a graph. * @return A string to open a graph. */ public String start_graph() &#123; return &quot;digraph G &#123;&quot;; &#125; /** * Returns a string that is used to end a graph. * @return A string to close a graph. */ public String end_graph() &#123; return &quot;&#125;&quot;; &#125; /** * Takes the cluster or subgraph id as input parameter and returns a string * that is used to start a subgraph. * @return A string to open a subgraph. */ public String start_subgraph(int clusterid) &#123; return &quot;subgraph cluster_&quot; + clusterid + &quot; &#123;&quot;; &#125; /** * Returns a string that is used to end a graph. * @return A string to close a graph. */ public String end_subgraph() &#123; return &quot;&#125;&quot;; &#125; /** * Read a DOT graph from a text file. * * @param input Input text file containing the DOT graph * source. */ public void readSource(String input) &#123; StringBuilder sb = new StringBuilder(); try &#123; FileInputStream fis = new FileInputStream(input); DataInputStream dis = new DataInputStream(fis); BufferedReader br = new BufferedReader(new InputStreamReader(dis)); String line; while ((line = br.readLine()) != null) &#123; sb.append(line); &#125; dis.close(); &#125; catch (Exception e) &#123; System.err.println(&quot;Error: &quot; + e.getMessage()); &#125; this.graph = sb; &#125; 使用示例通过调用API绘制一个简单的有向图 1234567891011121314151617public static void createDotGraph(String dotFormat,String fileName)&#123; GraphViz gv=new GraphViz(); gv.addln(gv.start_graph()); gv.add(dotFormat); gv.addln(gv.end_graph()); String type = &quot;jpg&quot;; //输出图文件的格式，以.jpg为例 gv.decreaseDpi(); gv.decreaseDpi(); File out = new File(fileName+&quot;.&quot;+ type); gv.writeGraphToFile( gv.getGraph( gv.getDotSource(), type ), out );&#125;public static void main(String[] args) throws Exception &#123; String dotFormat=&quot;1-&gt;2;1-&gt;3;1-&gt;4;4-&gt;5;4-&gt;6;6-&gt;7;5-&gt;7;3-&gt;8;3-&gt;6;8-&gt;7;2-&gt;8;2-&gt;5;&quot;; createDotGraph(dotFormat, &quot;DotGraph&quot;);&#125; 输出图为：","categories":[{"name":"踩过的坑","slug":"踩过的坑","permalink":"http://yoursite.com/categories/踩过的坑/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]}]}