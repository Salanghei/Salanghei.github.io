{"meta":{"title":"ZHAOYANGのBlog","subtitle":"Notes and Experiences","description":"Notes and Experiences","author":"ZhaoYang","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2019-07-25T02:39:56.000Z","updated":"2019-07-25T02:46:04.208Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"emmmmmm暂时没想到什么想好了再来写吧……"},{"title":"categories","date":"2019-07-23T07:20:17.000Z","updated":"2019-07-23T07:45:29.217Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Tagcloud","date":"2019-07-23T07:20:06.000Z","updated":"2019-07-23T07:44:44.230Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"吴恩达机器学习课程笔记（二）-单变量线性回归","slug":"吴恩达机器学习课程笔记（二）-单变量线性回归","date":"2019-07-25T02:15:52.000Z","updated":"2019-07-25T03:35:13.230Z","comments":true,"path":"2019/07/25/吴恩达机器学习课程笔记（二）-单变量线性回归/","link":"","permalink":"http://yoursite.com/2019/07/25/吴恩达机器学习课程笔记（二）-单变量线性回归/","excerpt":"本节课内容：介绍单变量线性回归的Hypothesis公式、参数、代价函数，通过梯度下降法计算最优参数值，得到最终的Hypothesis公式，进行预测","text":"本节课内容：介绍单变量线性回归的Hypothesis公式、参数、代价函数，通过梯度下降法计算最优参数值，得到最终的Hypothesis公式，进行预测 单变量线性回归代价函数（Cost Function）：平方误差函数（最常用） 梯度下降广泛用于机器学习的众多领域α称为学习速率，控制以多大的幅度更新参数：当α很小时，梯度下降很慢当α很大时，梯度下降可能越过最低点，可能无法收敛，甚至会发散 注意：θ_0 和θ_1 必须同步更新 在梯度下降法中，当我们接近局部最低点时，梯度下降会自动采取更小的幅度，因为局部最低点的导数为0，当接近局部最低点时，导数值会自动变得越来越小 线性回归的梯度下降“Batch” Gradient Descent：每一步的梯度下降的计算中都涉及到训练样本中的全部数据","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://yoursite.com/categories/学习笔记/"}],"tags":[{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/机器学习/"},{"name":"吴恩达机器学习课程","slug":"吴恩达机器学习课程","permalink":"http://yoursite.com/tags/吴恩达机器学习课程/"}]},{"title":"吴恩达机器学习课程笔记（一）-初识机器学习","slug":"吴恩达机器学习课程-初识机器学习","date":"2019-07-25T02:08:35.000Z","updated":"2019-07-25T02:51:33.746Z","comments":true,"path":"2019/07/25/吴恩达机器学习课程-初识机器学习/","link":"","permalink":"http://yoursite.com/2019/07/25/吴恩达机器学习课程-初识机器学习/","excerpt":"机器学习定义： 在没有明确设置的情况下，使计算机具有学习能力的研究领域（Arthur Samuel 1959, 跳棋游戏） 一个适当的学习问题定义如下，计算机程序从经验E中学习，解决某一任务T，进行某一性能度量P，通过 P测定在T上的表现因经验E而提高（Tom Mitchell 1998）","text":"机器学习定义： 在没有明确设置的情况下，使计算机具有学习能力的研究领域（Arthur Samuel 1959, 跳棋游戏） 一个适当的学习问题定义如下，计算机程序从经验E中学习，解决某一任务T，进行某一性能度量P，通过 P测定在T上的表现因经验E而提高（Tom Mitchell 1998） 机器学习算法:监督学习、无监督学习（最常用的两种）强化学习、推荐系统 监督学习：给算法一个数据集，其中包含了正确答案，算法的目的是给出更多正确答案连续值：回归问题，即选择合适的函数拟合数据离散值：分类问题，可能输出多个结果 无监督学习给算法一个数据集，其中不包含标签信息或者标签相同，算法的目的是找到其中的某种结构 聚类算法：根据数据的分布特征，将数据分成不同的簇应用：google新闻、基因组学、组织大型计算机集群、社交网络、市场划分、天文数据分析等 鸡尾酒会算法：从混合音频源中分离音频","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://yoursite.com/categories/学习笔记/"}],"tags":[{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/机器学习/"},{"name":"吴恩达机器学习课程","slug":"吴恩达机器学习课程","permalink":"http://yoursite.com/tags/吴恩达机器学习课程/"}]},{"title":"Calibrated Recommendations","slug":"Calibrated-Recommendations","date":"2019-07-23T09:08:28.000Z","updated":"2019-07-23T09:31:20.828Z","comments":true,"path":"2019/07/23/Calibrated-Recommendations/","link":"","permalink":"http://yoursite.com/2019/07/23/Calibrated-Recommendations/","excerpt":"When a user has watched, say, 70 romance movies and 30 action movies, then it is reasonable to expect the personalized list of recommended movies to be comprised of about 70% romance and 30% action movies as well. This important property is known as calibration, and recently received renewed attention in the context of fairness in machine learning. In the recommended list of items, calibration ensures that the various (past) areas of interest of a user are reflected with their corresponding proportions. Calibration is especially important in light of the fact that recommender systems optimized toward accuracy (e.g., ranking metrics) in the usual offline-setting can easily lead to recommendations where the lesser interests of a user get crowded out by the user’s main interests–which we show empirically as well as in thought-experiments. This can be prevented by calibrated recommendations. To this end, we outline metrics for quantifying the degree of calibration, as well as a simple yet effective re-ranking algorithm for post-processing the output of recommender systems.","text":"When a user has watched, say, 70 romance movies and 30 action movies, then it is reasonable to expect the personalized list of recommended movies to be comprised of about 70% romance and 30% action movies as well. This important property is known as calibration, and recently received renewed attention in the context of fairness in machine learning. In the recommended list of items, calibration ensures that the various (past) areas of interest of a user are reflected with their corresponding proportions. Calibration is especially important in light of the fact that recommender systems optimized toward accuracy (e.g., ranking metrics) in the usual offline-setting can easily lead to recommendations where the lesser interests of a user get crowded out by the user’s main interests–which we show empirically as well as in thought-experiments. This can be prevented by calibrated recommendations. To this end, we outline metrics for quantifying the degree of calibration, as well as a simple yet effective re-ranking algorithm for post-processing the output of recommender systems. Abstract校准（calibration），在机器学习公平性的背景下被重新重视保证准确率的推荐，很容易导致： 1. 用户的次要兴趣被主要兴趣挤出，使得推荐结果的领域逐渐趋向狭窄 2. 当多个用户使用同一账号时，不活跃的用户的兴趣会被排挤校准推荐（calibrated recommendations）可以避免这个问题贡献：概述量化标准度的度量指标，后处理推荐系统输出的重新排序算法 INTRODUCTION校准（calibrated）：各个类别的预测比例与数据中的实际比例一致校准推荐（calibrated recommendations）：推荐列表能够反应用户的各种兴趣比例校准的多样性：不同于项目之间最小相似性意义上的多样性，和推荐项的冗余 MOTIVATING EXAMPLE离线数据集：由用户-项-交互历史数据组成，将其分为训练集和测试集目的：保证最高准确度的情况下，在测试集中预测用户的交互项 假设：一个用户播放了70部“浪漫类”电影，和30部“动作类”电影 电影类别互斥目的：生成一个包含10部电影的推荐列表 类别不均衡：最极端情况：只知道用户对电影类别的喜好，没有任何其他电影的信息为达到最高准确度，会100%为用户推荐“浪漫类”的电影，此时准确率为70%如果随机为用户推荐电影，70%的概率推荐“浪漫类”，30%的概率推荐“动作类”，准确率只有0.7 · 70% + 0.3 · 30% = 58%因此，在保证准确性的前提下： 1. 在推荐结果中，用户的主要兴趣领域会被放大，而有轻微兴趣的领域会被排挤出去 2. 推荐结果是存在偏向的，偏向于用户的主要兴趣领域反过来说，为提高平衡性，或者校准推荐，会降低推荐的准确性 考虑电影概率： Latent Dirichlet Allocation（LDA）：受LDA的启发，用户选择电影的两步过程：选择类型，选择电影提到LDA的原因： 1. 假设在现实世界中，用户确实按照以上两个步骤选择电影。LDA模型在训练时，能够以正确的比例捕获用户的兴趣平衡。推荐列表是迭代生成的，每次迭代增加一个推荐项，推荐项的得出遵循它的生成过程，即上述两个步骤：首先，类型g会根据p(g|u)被抽取出来；然后，电影i根据p(i|g)从类型g的所有电影中抽出。因此，即使电影i被选中的概率很小，也可以排进推荐列表的前方，但准确率比评分推荐低 2. 不平衡推荐的问题不仅限于显式类别，也适用于潜在主题或嵌入情况，LDA就是这样的模型 3. 不管电影是否属于一个类别，或属于几个类别，不平衡推荐的问题都会出现 CALIBRATION METRICS（校准度量） CALIBRATION APPROACHES（校准方法） RELATED CONCEPTS多样性（Diversity）：多样性（Diversity）和校准（Calibration）的区别： 1. 多样性不能直接反应用户的兴趣比例：多样性即推荐项间的最小冗余或最小相似性，使推荐结果不是100%的“浪漫类”电影（在前面的例子中）。如果只有两种类型的电影，最多样性的推荐是50%“浪漫类”，50%“动作类”；如果还有其他类型的电影，多样性的推荐会把用户没有播放过的电影类型也推荐给用户，但如果把“动作类”电影在推荐中的比例由0%提升到30%以反映用户的兴趣比例，就不能保证多样性。只有把多样性和准确性平衡好，才能达到良好校准推荐。对于每个用户，这种折中的程度都是不同的。 2. 多样性可以推荐用户兴趣之外的电影，避免了推荐范围的减小（马太效应），而校准推荐没有这样的特性。这激发了对校准推荐的简单扩展，即用户兴趣之外的类别也会加入到推荐列表中：p_0 (g)表示每种类型的先验分布，取正数，为促进多样性DP：本质上是p(g│u)和q(g│u)之间的修正平方差，符合仅我们提到的特性1BinomDiv：符合特性2,3，劣势：无法给出推荐列表的校验程度（与目标比例的偏差），只能对不同推荐列表做相对比较；由于每个用户的兴趣比例不同，该方法不能简单的在用户之间进行平均，获得聚合度量 公平性（Fairness）：本篇文章中不考虑人之间的公平性，而是用户兴趣之间的公平性，也就是用正确的比例关系反应出来为什么本篇文章认为校准标准（calibration criteria）在公平性中尤其重要： 校准、等可能性、等机会不能同时满足，除非两种情况：机器学习做出完美预测（在现实世界中不可能）；不同组有相同的基本比率，即分类标签比例相同，通常在真实世界中也不可能出现。假设用户播放电影中70%是“浪漫类”，30%是“动作类”，那么这两种类型的基础比率很明显不同，两种类型电影的预测分数也会不同，因此，等可能性、等机会这样的公平性标准不能立即起适用 EXPERIMENTS上述图标也反映了，经过校准后的推荐列表中的推荐项仍然是用户感兴趣领域的电影，因此有必要进行扩展校准（extended calibration probability），将用户兴趣之外的电影也加入推荐当中计算推荐列表中50部电影的类型概率和用户播放历史的类型概率之间的差异，然后对所有用户求平均值，区分差值的正负值上图中，所有用户播放历史的类型概率的平均值是基准点，平均差值的正负决定了线段的长度，如果是完美推荐，那么线段长度应该为0。如果下面的线段比上方的线段长，那么这种类型电影的推荐与用户兴趣相比是过少的；如果上下一样长，那么这种类型电影的推荐在所有测试用户上的平均推荐比例是正确的（此外，上下方线段的长度还暗示了与每个用户兴趣比例的平均差距），要明确，推荐应该为每个用户都进行标准化，因此期望较小的线段长度Documentary、IMAX、Musical、Western是under-represented（最下端接近0）Action、Adventure、Crime、Mystery、Sci-Fi是over-represented（上端比下端长）上图采用λ=0.99的校准度 CONCLUSION本文是基于用户的角度，未来的研究工作将基于item的角度，比如一个item的推荐频率是否是另一个item的两倍，那这个 item很可能被选中（consume）的次数也是两倍的","categories":[{"name":"论文笔记","slug":"论文笔记","permalink":"http://yoursite.com/categories/论文笔记/"}],"tags":[{"name":"推荐系统","slug":"推荐系统","permalink":"http://yoursite.com/tags/推荐系统/"},{"name":"RecSys2018","slug":"RecSys2018","permalink":"http://yoursite.com/tags/RecSys2018/"}]},{"title":"简单的HTTP代理服务器的实现","slug":"简单的HTTP代理服务器的实现（基本功能-拓展功能）","date":"2018-05-08T13:22:38.000Z","updated":"2019-07-25T04:31:11.834Z","comments":true,"path":"2018/05/08/简单的HTTP代理服务器的实现（基本功能-拓展功能）/","link":"","permalink":"http://yoursite.com/2018/05/08/简单的HTTP代理服务器的实现（基本功能-拓展功能）/","excerpt":"实现功能 在指定端口（例如 8080）接收来自客户的 HTTP 请求并且根据其中的 URL 地址访问该地址所指向的 HTTP 服务器（原服务器），接收 HTTP 服务器的响应报文，并将响应报文转发给对应的客户进行浏览 支持 Cache 功能：求能缓存原服务器响应的对象，并能够通过修改请求报文（添加 If-Modified-Since 头行），向原服务器确认缓存对象是否是最新版本 网站过滤：允许/不允许重点内容访问某些网站 用户过滤：支持/不支持某些用户访问外部网站 网站引导：将用户对某个网站的访问引导至一个模拟网站（钓鱼）","text":"实现功能 在指定端口（例如 8080）接收来自客户的 HTTP 请求并且根据其中的 URL 地址访问该地址所指向的 HTTP 服务器（原服务器），接收 HTTP 服务器的响应报文，并将响应报文转发给对应的客户进行浏览 支持 Cache 功能：求能缓存原服务器响应的对象，并能够通过修改请求报文（添加 If-Modified-Since 头行），向原服务器确认缓存对象是否是最新版本 网站过滤：允许/不允许重点内容访问某些网站 用户过滤：支持/不支持某些用户访问外部网站 网站引导：将用户对某个网站的访问引导至一个模拟网站（钓鱼） 完整的代码（VS2015）：https://github.com/Salanghei/ProxyServer 实现步骤1、加载套接字库，创建套接字2、初始化套接字：设置 IP 地址和端口等属性3、代理服务器接收客户端发送的 TCP 请求报文，并解析 HTTP 头部（method, url, host 等信息）4、拓展功能：网站过滤，用户过滤，网站引导，检查是否有本地缓存（改造HTTP头添加 If-Modified-Since 字段）5、代理连接到服务器，并将客户端发送的 HTTP 数据报文转发给目标服务器6、接收目标服务器的响应报文 ，解析报文头信息：状态码为304时不需要更新缓存，并将本地缓存转发给客户端；否则直接将响应报文转发给客户端，并进行缓存7、关闭套接字 关于程序的运行为了使浏览器访问网址时通过代理服务器，必须进行相关设置，以 Chrome 浏览器设置为例，打开 Chrome 浏览器中的设置，点击高级，选择打开代理设置：选择局域网设置，按如图所示进行配置 然后程序就可以监听10240端口啦~ 代码是根据指导书改编的，菜鸟一枚，还望大神们多多指教~","categories":[{"name":"踩过的坑","slug":"踩过的坑","permalink":"http://yoursite.com/categories/踩过的坑/"}],"tags":[{"name":"代理","slug":"代理","permalink":"http://yoursite.com/tags/代理/"}]},{"title":"远程服务器 ubuntu16.04 caffe+matlab r2014b+python+cpu配置(三)","slug":"远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（三）","date":"2018-02-18T09:14:50.000Z","updated":"2019-07-25T04:29:51.506Z","comments":true,"path":"2018/02/18/远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（三）/","link":"","permalink":"http://yoursite.com/2018/02/18/远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（三）/","excerpt":"Caffe配置过程中的一些问题","text":"Caffe配置过程中的一些问题 参考链接：https://groups.google.com/forum/#!topic/caffe-users/x8Y26vf-or8http://blog.csdn.net/striker_v/article/details/52890747http://www.echojb.com/cuda/2017/05/05/375103.htmlhttp://www.caffecn.cn/?/question/1113https://blog.csdn.net/dym755833564/article/details/77965966 GCC版本太新在make过程中可能 string.h ‘memcy’ was not declared in this scope的错误，这是因为ubuntu中gcc编译器版本太新，解决方法是打开Makefile文件，找到下面这行代码（大概在409行左右）： 1NVCCFLAGS += -ccbin=(CXX)−Xcompiler−fPIC(COMMON_FLAGS) 将其改为： 1NVCCFLAGS += -D_FORCE_INLINES -ccbin=(CXX)−Xcompiler−fPIC(COMMON_FLAGS) make matcaffe时报错12345678910111213141516171819202122232425/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp: In function ‘void delete_solver(int, mxArray**, int, const mxArray**)’:/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:208:3: warning: lambda expressions only available with -std=c++11 or -std=gnu++11 [enabled by default]/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:208:4: error: no matching function for call to ‘remove_if(std::vector&lt;boost::shared_ptr&lt;caffe::Solver&lt;float&gt; &gt; &gt;::iterator, std::vector&lt;boost::shared_ptr&lt;caffe::Solver&lt;float&gt; &gt; &gt;::iterator, delete_solver(int, mxArray**, int, const mxArray**)::&lt;lambda(const boost::shared_ptr&lt;caffe::Solver&lt;float&gt; &gt;&amp;)&gt;)’/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:208:4: note: candidate is:In file included from /usr/include/c++/4.7/algorithm:63:0, from ./include/caffe/blob.hpp:4, from ./include/caffe/caffe.hpp:7, from /home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:18:/usr/include/c++/4.7/bits/stl_algo.h:1166:5: note: template&lt;class _FIter, class _Predicate&gt; _FIter std::remove_if(_FIter, _FIter, _Predicate)/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:208:4: error: template argument for ‘template&lt;class _FIter, class _Predicate&gt; _FIter std::remove_if(_FIter, _FIter, _Predicate)’ uses local type ‘delete_solver(int, mxArray**, int, const mxArray**)::&lt;lambda(const boost::shared_ptr&lt;caffe::Solver&lt;float&gt; &gt;&amp;)&gt;’/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:208:4: error: trying to instantiate ‘template&lt;class _FIter, class _Predicate&gt; _FIter std::remove_if(_FIter, _FIter, _Predicate)’/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp: In function ‘void delete_net(int, mxArray**, int, const mxArray**)’:/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:293:3: warning: lambda expressions only available with -std=c++11 or -std=gnu++11 [enabled by default]/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:293:4: error: no matching function for call to ‘remove_if(std::vector&lt;boost::shared_ptr&lt;caffe::Net&lt;float&gt; &gt; &gt;::iterator, std::vector&lt;boost::shared_ptr&lt;caffe::Net&lt;float&gt; &gt; &gt;::iterator, delete_net(int, mxArray**, int, const mxArray**)::&lt;lambda(const boost::shared_ptr&lt;caffe::Net&lt;float&gt; &gt;&amp;)&gt;)’/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:293:4: note: candidate is:In file included from /usr/include/c++/4.7/algorithm:63:0, from ./include/caffe/blob.hpp:4, from ./include/caffe/caffe.hpp:7, from /home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:18:/usr/include/c++/4.7/bits/stl_algo.h:1166:5: note: template&lt;class _FIter, class _Predicate&gt; _FIter std::remove_if(_FIter, _FIter, _Predicate)/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:293:4: error: template argument for ‘template&lt;class _FIter, class _Predicate&gt; _FIter std::remove_if(_FIter, _FIter, _Predicate)’ uses local type ‘delete_net(int, mxArray**, int, const mxArray**)::&lt;lambda(const boost::shared_ptr&lt;caffe::Net&lt;float&gt; &gt;&amp;)&gt;’/home/zkk/caffe/matlab/+caffe/private/caffe_.cpp:293:4: error: trying to instantiate ‘template&lt;class _FIter, class _Predicate&gt; _FIter std::remove_if(_FIter, _FIter, _Predicate)’Makefile:518: recipe for target &apos;matlab/+caffe/private/caffe_.mexa64&apos; failedmake: *** [matlab/+caffe/private/caffe_.mexa64] Error 255 修改Makefile里面的CXXFLAGS，添加CXXFLAGS += -std=c++11.然后重新编译就可以了，即： 12CXXFLAGS += -MMD -MPCXXFLAGS += -std=c++11 注意： 是添加不是修改 make mattest时报错：123456789Invalid MEX-file &apos;caffe/matlab/+caffe/private/caffe_.mexa64&apos;:caffe/matlab/+caffe/private/caffe_.mexa64: undefinedsymbol: _ZN2cv8imencodeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_11_InputArrayERSt6vectorIhSaIhEERKSB_IiSaIiEE。 Error in caffe.set_mode_cpu (line 5)caffe_(&apos;set_mode_cpu&apos;); Error in caffe.run_tests (line 6)caffe.set_mode_cpu(); 有些说法是要执行如下命令： 12export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libopencv_highgui.so.2.4:/usr/lib/x86_64-linux-gnu/libopencv_imgproc.so.2.4:/usr/lib/x86_64-linux-gnu/libopencv_core.so.2.4:/usr/lib/x86_64-linux-gnu/libstdc++.so.6:/usr/lib/x86_64-linux-gnu/libfreetype.so.6export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libstdc++.so.6 但是再次运行make mattest时会有新错误： 1234malloc: unknown:0: assertion botchedfree: called with unallocated block argumentlast command: (null)Aborting...find: ‘bash’ terminated by signal 6 虽然最后还是能运行成功，但发现在运行bash指令时无法成功执行，纠结了好久发现是这里没有彻底解决问题，解决方法是： 将 libopencv_imgproc.so.2.4, libopencv_core.so.2.4, libopencv_highgui.so.2.4三个文件拷贝到/usr/local/MATLAB/R2016b/bin/glnxa64/中 12345678$ sudo mv /usr/local/MATLAB/R2016b/bin/glnxa64/libopencv_imgproc.so.2.4 /usr/local/MATLAB/R2016b/bin/glnxa64/libopencv_imgproc.so.2.4.old$ sudo cp /usr/lib/x86_64-linux-gnu/libopencv_imgproc.so.2.4 /usr/local/MATLAB/R2016b/bin/glnxa64/$ sudo mv /usr/local/MATLAB/R2016b/bin/glnxa64/libopencv_core.so.2.4 /usr/local/MATLAB/R2016b/bin/glnxa64/libopencv_core.so.2.4.old$ sudo cp /usr/lib/x86_64-linux-gnu/libopencv_core.so.2.4 /usr/local/MATLAB/R2016b/bin/glnxa64/$ sudo mv /usr/local/MATLAB/R2016b/bin/glnxa64/libopencv_highgui.so.2.4 /usr/local/MATLAB/R2016b/bin/glnxa64/libopencv_highgui.so.2.4.old$ sudo cp /usr/lib/x86_64-linux-gnu/libopencv_highgui.so.2.4 /usr/local/MATLAB/R2016b/bin/glnxa64/ 再执行 1export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libstdc++.so.6 问题就解决啦，bash指令也没有问题啦 关于opencvmake all时报错，错误信息： 1234567...CXX/LD -o .build_release/tools/convert_imageset.bin .build_release/lib/libcaffe.so: undefined reference to cv::imread(cv::String const&amp;, int)’ .build_release/lib/libcaffe.so: undefined reference to cv::imencode(cv::String const&amp;, cv::_InputArray const&amp;, std::vector &gt;&amp;, std::vector &gt; const&amp;)’ .build_release/lib/libcaffe.so: undefined reference to cv::imdecode(cv::_InputArray const&amp;, int)’ collect2: error: ld returned 1 exit status ...Makefile:518: recipe for target &apos;matlab/+caffe/private/caffe_.mexa64&apos; failedmake: *** [matlab/+caffe/private/caffe_.mexa64] Error 255 首先，已经配置过了opencv，可以这样查询安装版本： 1$ pkg-config --modversion opencv 所以出现上面的错误，应该是opencv_imgcodecs链接的问题，比较有效的解决方案是，把opencv需要的lib添加到Makefile文件中，找到LIBRARIES（在PYTHON_LIBRARIES := boost_python python2.7 前一行），并进行修改，向该句末尾添加： 1opencv_core opencv_highgui opencv_imgproc opencv_imgcodecs 我的Makefile文件修改后为： 1LIBRARIES += glog gflags protobuf boost_system boost_filesystem m hdf5_hl hdf5 opencv_core opencv_highgui opencv_imgproc opencv_imgcodecs","categories":[{"name":"踩过的坑","slug":"踩过的坑","permalink":"http://yoursite.com/categories/踩过的坑/"}],"tags":[{"name":"caffe","slug":"caffe","permalink":"http://yoursite.com/tags/caffe/"}]},{"title":"远程服务器 ubuntu16.04 caffe+matlab r2014b+python+cpu配置(二)","slug":"远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（二）","date":"2018-02-18T08:38:29.000Z","updated":"2019-07-25T04:28:37.796Z","comments":true,"path":"2018/02/18/远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（二）/","link":"","permalink":"http://yoursite.com/2018/02/18/远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（二）/","excerpt":"配置Caffe+Matlab+Python（CPU-ONLY）","text":"配置Caffe+Matlab+Python（CPU-ONLY） 本文参考文章：ubuntu16.04, Matlab2016b caffe编译安装：https://www.cnblogs.com/haoliuhust/p/7738920.html官方安装文档：http://caffe.berkeleyvision.org/installation.htmlUbuntu16.04安装Caffe(CPU Only)：http://blog.csdn.net/muzilinxi90/article/details/53673184 安装依赖项1234$ sudo apt update$ sudo apt search openblas$ sudo apt install libopenblas-dev$ sudo update-alternatives --config libblas.so.3 12$ sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler$ sudo apt-get install --no-install-recommends libboost-all-dev 1$ sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev 此外还要安装git，cmake 12$ sudo apt-get install git$ sudo apt-get install cmake 下载Caffe源码12$ git clone https://github.com/BVLC/caffe.git$ cd caffe/ python 依赖库 1234$ cd python/$ apt-get install python-pip $ pip install --upgrade pip$ for req in $(cat requirements.txt); do pip install $req; done 编译Caffe在Caffe文件夹下，拷贝一份Makefile.config.example并重命名成Makefile.config，修改该配置文件： 1$ cp Makefile.config.example Makefile.config 打开Makefile.config（vi Makefile.config），因为这里没有配置GPU，所以去掉CPU_ONLY := 1前面的注释，MATLAB_DIR后改为matlab的安装地址 由于Ubuntu16.04文件结构的变化，#Whatever else you find you need goes here.处要改成下面这样： 123# Whatever else you find you need goes here. INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu/hdf5/serial 注意： 每条路径之间一定要有空格，否则仍然会报错 接下来编译Caffe 123$ make all$ make test$ make runtest 编译python接口1$ make pycaffe 进入caffe/python，打开python，输入import caffe，如果没有报错则配置成功 编译matlab接口12$ make matcaffe$ make mattest","categories":[{"name":"踩过的坑","slug":"踩过的坑","permalink":"http://yoursite.com/categories/踩过的坑/"}],"tags":[{"name":"caffe","slug":"caffe","permalink":"http://yoursite.com/tags/caffe/"}]},{"title":"远程服务器 ubuntu16.04 caffe+matlab r2014b+python+cpu配置(一)","slug":"远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（一）","date":"2018-02-11T13:04:12.000Z","updated":"2019-07-25T04:29:47.163Z","comments":true,"path":"2018/02/11/远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（一）/","link":"","permalink":"http://yoursite.com/2018/02/11/远程服务器-ubuntu16-04-caffe-matlab-r2014b-python-cpu-only配置（一）/","excerpt":"远程服务器Ubuntu16.04 安装Matlab R2014b","text":"远程服务器Ubuntu16.04 安装Matlab R2014b 本文参考链接：http://blog.csdn.net/wangpengfei163/article/details/47311041 所需资源下载：链接: https://pan.baidu.com/s/1bqotI03 密码: w28s本文中只涉及到libmwservices.so.rar，MATLAB_R2014B_MAC_LINUX_crack.zip，R2014b_glnxa64.iso三个文件。 替换install.jar文件将R2014b_glnxa64.iso/java/jar/install.jar替换为MATLAB_R2014B_MAC_LINUX_crack.zip中的install.jar文件 可以使用UltraIso工具（试用版仅支持100M以下文件的改动，注册码请自行百度） 上传文件到服务器应该是个笨方法吧，实在不清楚在远程服务器上应该怎么挂载镜像了【捂脸】 使用scp命令上传文件：scp local_file remote_username@remote_ip:remote_folder 上传文件的过程有点漫长，6G的文件传了一晚上。。。 挂载镜像建议使用root用户，文件挂载命令格式如下： 1mount -o loop,rw /home/R2014b_glnxa64.iso /matlab 其中/matlab是要挂载的文件夹目录，建议新建一个文件夹。 安装Matlab在SSH上远程安装采用第二种方式，输入如下命令： 1# ./install -mode silent -fileInstallationKey 29797-39064-48306-32452 -agreeToLicense yes -activationPropertiesFile /home/activate.ini -destinationFolder /usr/local/MATLAB/R2014b 其中activate.ini文件需要按照文件内容进行设置，其中的license.lic是MATLAB_R2014B_MAC_LINUX_crack.zip中的文件，需将其解压，路径自行设置 12activateCommand=activateOfflinelicenseFile=/home/license.lic 如果未成功激活，可以在安装结束后使用如下命令激活，也需要设置activate.ini 1#/usr/local/MATLAB/R2014b/bin/activate_matlab.sh -propertiesFile /home/activate.ini 破解Matlab将libmwservices.so.rar中的so文件拷贝到/usr/local/MATLAB/R2014b/bin/glnxa64/文件夹下 12rm -rf /usr/local/MATLAB/R2014b/bin/glnxa64/libmwservices.socp /home/libmwservices.so /usr/local/MATLAB/R2014b/bin/glnxa64/ 安装成功，运行/usr/local/MATLAB/R2014b/bin/matlab 配置环境变量1vi /etc/profile 在文件末尾添加 1export PATH=/usr/local/MATLAB/R2014b/bin:$PATH 保存并退出后使设置生效 1source /etc/profile 此时直接输入matlab即可启动软件","categories":[{"name":"踩过的坑","slug":"踩过的坑","permalink":"http://yoursite.com/categories/踩过的坑/"}],"tags":[{"name":"caffe","slug":"caffe","permalink":"http://yoursite.com/tags/caffe/"}]},{"title":"Java Web的新浪云SAE部署","slug":"Java-Web的新浪云SAE部署","date":"2017-10-10T06:24:50.000Z","updated":"2019-07-25T04:30:07.155Z","comments":true,"path":"2017/10/10/Java-Web的新浪云SAE部署/","link":"","permalink":"http://yoursite.com/2017/10/10/Java-Web的新浪云SAE部署/","excerpt":"Java Web的新浪云SAE部署，共享型数据库","text":"Java Web的新浪云SAE部署，共享型数据库 创建应用在新浪云注册后即可在SAE平台上创建应用，在云平台SAE中点击 应用管理 &gt; 创建新应用，选择相应的部署环境和云空间配置，填写好应用信息，其中应用名称一般与项目名称一致： 进入管理应用页面，总览中显示的二级域名即为网站的网址，Access Key为数据库连接时的用户名，Secret Key为密码： 配置数据库点击 数据库与缓存服务 &gt; 共享型MySQL，点击创建MySQL创建数据库，点击管理选项可进入数据库的管理页面，点击SQL选项卡，即可对数据库进行各种操作，与MySQL的命令行类似，可以通过命令建表，也可以导入数据表： 数据库连接在项目中要做好相应修改，相关代码在官方文档中已经给出： 只需将数据库连接修改为： 123456789101112String driver = &quot;com.mysql.jdbc.Driver&quot;;String username = System.getenv(&quot;ACCESSKEY&quot;);String password = System.getenv(&quot;SECRETKEY&quot;);//System.getenv(&quot;MYSQL_HOST_S&quot;); 为从库，只读String dbUrl = String.format(&quot;jdbc:mysql://%s:%s/%s&quot;, System.getenv(&quot;MYSQL_HOST&quot;), System.getenv(&quot;MYSQL_PORT&quot;), System.getenv(&quot;MYSQL_DB&quot;));try &#123; Class.forName(driver).newInstance(); con = DriverManager.getConnection(dbUrl, username, password); // ...&#125; catch (Exception e) &#123; // ...&#125; 修改后将项目导出为war包，点击 应用 &gt; 代码管理，将导出的war包上传。至此，云平台部署完成，通过二级域名即可访问。","categories":[{"name":"踩过的坑","slug":"踩过的坑","permalink":"http://yoursite.com/categories/踩过的坑/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]},{"title":"Windows下在Java中调用GraphViz","slug":"Windows下在Java中调用GraphViz","date":"2017-07-23T02:59:36.000Z","updated":"2019-07-23T06:31:29.141Z","comments":true,"path":"2017/07/23/Windows下在Java中调用GraphViz/","link":"","permalink":"http://yoursite.com/2017/07/23/Windows下在Java中调用GraphViz/","excerpt":"Windows下在Java中调用GraphViz绘制有向图","text":"Windows下在Java中调用GraphViz绘制有向图 相关文章及代码How to call GraphViz from java：https://stackoverflow.com/questions/26481910/how-to-call-graphviz-from-javajava – java中调用GraphViz：http://blog.csdn.net/TheSnowBoy_2/article/details/52540874windows下Graphviz安装及入门教程：http://blog.csdn.net/lanchunhui/article/details/49472949 GraphViz环境变量的配置安装好GraphViz后，将Graphviz安装目录下的bin文件夹添加到Path环境变量中： 验证：进入命令行界面，输入dot -version回车，会显示GraphViz相关的版本信息，则配置成功： 为GraphViz的java的API建立配置文件在工程目录下创建test文件夹，在test文件夹下创建tmpDir文件夹，此文件夹用来存放临时文件。再在工程目录下创建config文件夹，并将文件config.properties放在该文件夹内。 config.properties内容如下： 1234567############################################################### Windows Configurations ################################################################ The dir. where temporary files will be created.tempDirForWindows10 = E:/temp# Where is your dot program located? It will be called externally.dotForWindows10 = &quot;E:/software_daily/FOR_LEARN/graphViz/bin/dot.exe&quot; 将其中tempDirForWindows10和dotForWindows10中的Windows10改为相应的Windows版本，dotForWindows10后的路径改为dot.exe的安装路径。 ###GraphViz的java API源代码import java.io.BufferedReader;import java.io.BufferedWriter;import java.io.DataInputStream;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.FileWriter;import java.io.InputStreamReader;import java.util.Properties;/*** &lt;dl&gt;* &lt;dt&gt;Purpose: GraphViz Java API* &lt;dd&gt;** &lt;dt&gt;Description:* &lt;dd&gt; With this Java class you can simply call dot* from your Java programs.* &lt;dt&gt;Example usage:* &lt;dd&gt;* &lt;pre&gt;* GraphViz gv = new GraphViz();* gv.addln(gv.start_graph());* gv.addln(&quot;A -&gt; B;&quot;);* gv.addln(&quot;A -&gt; C;&quot;);* gv.addln(gv.end_graph());* System.out.println(gv.getDotSource());** String type = &quot;gif&quot;;* File out = new File(&quot;out.&quot; + type); // out.gif in this example* gv.writeGraphToFile( gv.getGraph( gv.getDotSource(), type ), out );* &lt;/pre&gt;* &lt;/dd&gt;** &lt;/dl&gt;** @version v0.5.1, 2013/03/18 (March) -- Patch of Juan Hoyos (Mac support)* @version v0.5, 2012/04/24 (April) -- Patch of Abdur Rahman (OS detection + start subgraph + * read config file)* @version v0.4, 2011/02/05 (February) -- Patch of Keheliya Gallaba is added. Now you* can specify the type of the output file: gif, dot, fig, pdf, ps, svg, png, etc.* @version v0.3, 2010/11/29 (November) -- Windows support + ability to read the graph from a text file* @version v0.2, 2010/07/22 (July) -- bug fix* @version v0.1, 2003/12/04 (December) -- first release* @author Laszlo Szathmary (&lt;a href=&quot;jabba.laci@gmail.com&quot;&gt;jabba.laci@gmail.com&lt;/a&gt;)*/public class GraphViz&#123; /** * Detects the client&apos;s operating system. */ private final static String osName = System.getProperty(&quot;os.name&quot;).replaceAll(&quot;\\\\s&quot;,&quot;&quot;); /** * Load the config.properties file. */ private final static String cfgProp = &quot;config/config.properties&quot;; private final static Properties configFile = new Properties() &#123; private final static long serialVersionUID = 1L; &#123; try &#123; load(new FileInputStream(cfgProp)); &#125; catch (Exception e) &#123;&#125; &#125; &#125;; /** * The dir. where temporary files will be created. */private static String TEMP_DIR = &quot;test/tmpDir&quot;; /** * Where is your dot program located? It will be called externally. */private static String DOT = configFile.getProperty(&quot;dotFor&quot; + osName); /** * The image size in dpi. 96 dpi is normal size. Higher values are 10% higher each. * Lower values 10% lower each. * * dpi patch by Peter Mueller */ private int[] dpiSizes = &#123;46, 51, 57, 63, 70, 78, 86, 96, 106, 116, 128, 141, 155, 170, 187, 206, 226, 249&#125;; /** * Define the index in the image size array. */ private int currentDpiPos = 7; /** * Increase the image size (dpi). */ public void increaseDpi() &#123; if ( this.currentDpiPos &lt; (this.dpiSizes.length - 1) ) &#123; ++this.currentDpiPos; &#125; &#125; /** * Decrease the image size (dpi). */ public void decreaseDpi() &#123; if (this.currentDpiPos &gt; 0) &#123; --this.currentDpiPos; &#125; &#125; public int getImageDpi() &#123; return this.dpiSizes[this.currentDpiPos]; &#125; /** * The source of the graph written in dot language. */ private StringBuilder graph = new StringBuilder(); /** * Constructor: creates a new GraphViz object that will contain * a graph. */ public GraphViz() &#123; &#125; /** * Returns the graph&apos;s source description in dot language. * @return Source of the graph in dot language. */ public String getDotSource() &#123; return this.graph.toString(); &#125; /** * Adds a string to the graph&apos;s source (without newline). */ public void add(String line) &#123; this.graph.append(line); &#125; /** * Adds a string to the graph&apos;s source (with newline). */ public void addln(String line) &#123; this.graph.append(line + &quot;\\n&quot;); &#125; /** * Adds a newline to the graph&apos;s source. */ public void addln() &#123; this.graph.append(&apos;\\n&apos;); &#125; public void clearGraph()&#123; this.graph = new StringBuilder(); &#125; /** * Returns the graph as an image in binary format. * @param dot_source Source of the graph to be drawn. * @param type Type of the output image to be produced, e.g.: gif, dot, fig, pdf, ps, svg, png. * @return A byte array containing the image of the graph. */ public byte[] getGraph(String dot_source, String type) &#123; File dot; byte[] img_stream = null; try &#123; dot = writeDotSourceToFile(dot_source); if (dot != null) &#123; img_stream = get_img_stream(dot, type); if (dot.delete() == false) System.err.println(&quot;Warning: &quot; + dot.getAbsolutePath() + &quot; could not be deleted!&quot;); return img_stream; &#125; return null; &#125; catch (java.io.IOException ioe) &#123; return null; &#125; &#125; /** * Writes the graph&apos;s image in a file. * @param img A byte array containing the image of the graph. * @param file Name of the file to where we want to write. * @return Success: 1, Failure: -1 */ public int writeGraphToFile(byte[] img, String file) &#123; File to = new File(file); return writeGraphToFile(img, to); &#125; /** * Writes the graph&apos;s image in a file. * @param img A byte array containing the image of the graph. * @param to A File object to where we want to write. * @return Success: 1, Failure: -1 */ public int writeGraphToFile(byte[] img, File to) &#123; try &#123; FileOutputStream fos = new FileOutputStream(to); fos.write(img); fos.close(); &#125; catch (java.io.IOException ioe) &#123; return -1; &#125; return 1; &#125; /** * It will call the external dot program, and return the image in * binary format. * @param dot Source of the graph (in dot language). * @param type Type of the output image to be produced, e.g.: gif, dot, fig, pdf, ps, svg, png. * @return The image of the graph in .gif format. */ private byte[] get_img_stream(File dot, String type) &#123; File img; byte[] img_stream = null; try &#123; img = File.createTempFile(&quot;graph_&quot;, &quot;.&quot;+type, new File(GraphViz.TEMP_DIR)); Runtime rt = Runtime.getRuntime(); // patch by Mike Chenault String[] args = &#123;DOT, &quot;-T&quot;+type, &quot;-Gdpi=&quot;+dpiSizes[this.currentDpiPos], dot.getAbsolutePath(), &quot;-o&quot;, img.getAbsolutePath()&#125;; Process p = rt.exec(args); p.waitFor(); FileInputStream in = new FileInputStream(img.getAbsolutePath()); img_stream = new byte[in.available()]; in.read(img_stream); // Close it if we need to if( in != null ) in.close(); if (img.delete() == false) System.err.println(&quot;Warning: &quot; + img.getAbsolutePath() + &quot; could not be deleted!&quot;); &#125; catch (java.io.IOException ioe) &#123; System.err.println(&quot;Error: in I/O processing of tempfile in dir &quot; + GraphViz.TEMP_DIR+&quot;\\n&quot;); System.err.println(&quot; or in calling external command&quot;); ioe.printStackTrace(); &#125; catch (java.lang.InterruptedException ie) &#123; System.err.println(&quot;Error: the execution of the external program was interrupted&quot;); ie.printStackTrace(); &#125; return img_stream; &#125; /** * Writes the source of the graph in a file, and returns the written file * as a File object. * @param str Source of the graph (in dot language). * @return The file (as a File object) that contains the source of the graph. */ private File writeDotSourceToFile(String str) throws java.io.IOException &#123; File temp; try &#123; temp = File.createTempFile(&quot;dorrr&quot;,&quot;.dot&quot;, new File(GraphViz.TEMP_DIR)); FileWriter fout = new FileWriter(temp); fout.write(str); BufferedWriter br=new BufferedWriter(new FileWriter(&quot;dotsource.dot&quot;)); br.write(str); br.flush(); br.close(); fout.close(); &#125; catch (Exception e) &#123; System.err.println(&quot;Error: I/O error while writing the dot source to temp file!&quot;); return null; &#125; return temp; &#125; /** * Returns a string that is used to start a graph. * @return A string to open a graph. */ public String start_graph() &#123; return &quot;digraph G &#123;&quot;; &#125; /** * Returns a string that is used to end a graph. * @return A string to close a graph. */ public String end_graph() &#123; return &quot;&#125;&quot;; &#125; /** * Takes the cluster or subgraph id as input parameter and returns a string * that is used to start a subgraph. * @return A string to open a subgraph. */ public String start_subgraph(int clusterid) &#123; return &quot;subgraph cluster_&quot; + clusterid + &quot; &#123;&quot;; &#125; /** * Returns a string that is used to end a graph. * @return A string to close a graph. */ public String end_subgraph() &#123; return &quot;&#125;&quot;; &#125; /** * Read a DOT graph from a text file. * * @param input Input text file containing the DOT graph * source. */ public void readSource(String input) &#123; StringBuilder sb = new StringBuilder(); try &#123; FileInputStream fis = new FileInputStream(input); DataInputStream dis = new DataInputStream(fis); BufferedReader br = new BufferedReader(new InputStreamReader(dis)); String line; while ((line = br.readLine()) != null) &#123; sb.append(line); &#125; dis.close(); &#125; catch (Exception e) &#123; System.err.println(&quot;Error: &quot; + e.getMessage()); &#125; this.graph = sb; &#125; 使用示例通过调用API绘制一个简单的有向图 1234567891011121314151617public static void createDotGraph(String dotFormat,String fileName)&#123; GraphViz gv=new GraphViz(); gv.addln(gv.start_graph()); gv.add(dotFormat); gv.addln(gv.end_graph()); String type = &quot;jpg&quot;; //输出图文件的格式，以.jpg为例 gv.decreaseDpi(); gv.decreaseDpi(); File out = new File(fileName+&quot;.&quot;+ type); gv.writeGraphToFile( gv.getGraph( gv.getDotSource(), type ), out );&#125;public static void main(String[] args) throws Exception &#123; String dotFormat=&quot;1-&gt;2;1-&gt;3;1-&gt;4;4-&gt;5;4-&gt;6;6-&gt;7;5-&gt;7;3-&gt;8;3-&gt;6;8-&gt;7;2-&gt;8;2-&gt;5;&quot;; createDotGraph(dotFormat, &quot;DotGraph&quot;);&#125; 输出图为：","categories":[{"name":"踩过的坑","slug":"踩过的坑","permalink":"http://yoursite.com/categories/踩过的坑/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://yoursite.com/tags/Java/"}]}]}